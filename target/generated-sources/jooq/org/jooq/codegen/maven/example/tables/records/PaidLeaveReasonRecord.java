/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.codegen.maven.example.tables.PaidLeaveReason;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaidLeaveReasonRecord extends UpdatableRecordImpl<PaidLeaveReasonRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>human_resource_management.paid_leave_reason.reason_id</code>.
     */
    public PaidLeaveReasonRecord setReasonId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.paid_leave_reason.reason_id</code>.
     */
    public Long getReasonId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>human_resource_management.paid_leave_reason.reason_name</code>.
     */
    public PaidLeaveReasonRecord setReasonName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.paid_leave_reason.reason_name</code>.
     */
    public String getReasonName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PaidLeaveReason.PAID_LEAVE_REASON.REASON_ID;
    }

    @Override
    public Field<String> field2() {
        return PaidLeaveReason.PAID_LEAVE_REASON.REASON_NAME;
    }

    @Override
    public Long component1() {
        return getReasonId();
    }

    @Override
    public String component2() {
        return getReasonName();
    }

    @Override
    public Long value1() {
        return getReasonId();
    }

    @Override
    public String value2() {
        return getReasonName();
    }

    @Override
    public PaidLeaveReasonRecord value1(Long value) {
        setReasonId(value);
        return this;
    }

    @Override
    public PaidLeaveReasonRecord value2(String value) {
        setReasonName(value);
        return this;
    }

    @Override
    public PaidLeaveReasonRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaidLeaveReasonRecord
     */
    public PaidLeaveReasonRecord() {
        super(PaidLeaveReason.PAID_LEAVE_REASON);
    }

    /**
     * Create a detached, initialised PaidLeaveReasonRecord
     */
    public PaidLeaveReasonRecord(Long reasonId, String reasonName) {
        super(PaidLeaveReason.PAID_LEAVE_REASON);

        setReasonId(reasonId);
        setReasonName(reasonName);
    }

    /**
     * Create a detached, initialised PaidLeaveReasonRecord
     */
    public PaidLeaveReasonRecord(org.jooq.codegen.maven.example.tables.pojos.PaidLeaveReason value) {
        super(PaidLeaveReason.PAID_LEAVE_REASON);

        if (value != null) {
            setReasonId(value.getReasonId());
            setReasonName(value.getReasonName());
        }
    }
}
