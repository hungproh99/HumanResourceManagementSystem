/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.codegen.maven.example.tables.PaidLeave;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaidLeaveRecord extends UpdatableRecordImpl<PaidLeaveRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.paid_leave.id</code>.
     */
    public PaidLeaveRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.paid_leave.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>human_resource_management.paid_leave.paid_leave_reason_id</code>.
     */
    public PaidLeaveRecord setPaidLeaveReasonId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.paid_leave.paid_leave_reason_id</code>.
     */
    public Long getPaidLeaveReasonId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>human_resource_management.paid_leave.timekeeping_id</code>.
     */
    public PaidLeaveRecord setTimekeepingId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.paid_leave.timekeeping_id</code>.
     */
    public Long getTimekeepingId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PaidLeave.PAID_LEAVE.ID;
    }

    @Override
    public Field<Long> field2() {
        return PaidLeave.PAID_LEAVE.PAID_LEAVE_REASON_ID;
    }

    @Override
    public Field<Long> field3() {
        return PaidLeave.PAID_LEAVE.TIMEKEEPING_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPaidLeaveReasonId();
    }

    @Override
    public Long component3() {
        return getTimekeepingId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPaidLeaveReasonId();
    }

    @Override
    public Long value3() {
        return getTimekeepingId();
    }

    @Override
    public PaidLeaveRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PaidLeaveRecord value2(Long value) {
        setPaidLeaveReasonId(value);
        return this;
    }

    @Override
    public PaidLeaveRecord value3(Long value) {
        setTimekeepingId(value);
        return this;
    }

    @Override
    public PaidLeaveRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaidLeaveRecord
     */
    public PaidLeaveRecord() {
        super(PaidLeave.PAID_LEAVE);
    }

    /**
     * Create a detached, initialised PaidLeaveRecord
     */
    public PaidLeaveRecord(Long id, Long paidLeaveReasonId, Long timekeepingId) {
        super(PaidLeave.PAID_LEAVE);

        setId(id);
        setPaidLeaveReasonId(paidLeaveReasonId);
        setTimekeepingId(timekeepingId);
    }

    /**
     * Create a detached, initialised PaidLeaveRecord
     */
    public PaidLeaveRecord(org.jooq.codegen.maven.example.tables.pojos.PaidLeave value) {
        super(PaidLeave.PAID_LEAVE);

        if (value != null) {
            setId(value.getId());
            setPaidLeaveReasonId(value.getPaidLeaveReasonId());
            setTimekeepingId(value.getTimekeepingId());
        }
    }
}
