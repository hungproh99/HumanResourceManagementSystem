/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.codegen.maven.example.tables.Bank;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankRecord extends UpdatableRecordImpl<BankRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.bank.bank_id</code>.
     */
    public BankRecord setBankId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.bank.bank_id</code>.
     */
    public Long getBankId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>human_resource_management.bank.account_name</code>.
     */
    public BankRecord setAccountName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.bank.account_name</code>.
     */
    public String getAccountName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>human_resource_management.bank.account_number</code>.
     */
    public BankRecord setAccountNumber(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.bank.account_number</code>.
     */
    public String getAccountNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>human_resource_management.bank.address</code>.
     */
    public BankRecord setAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.bank.address</code>.
     */
    public String getAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>human_resource_management.bank.name_bank</code>.
     */
    public BankRecord setNameBank(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.bank.name_bank</code>.
     */
    public String getNameBank() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Bank.BANK.BANK_ID;
    }

    @Override
    public Field<String> field2() {
        return Bank.BANK.ACCOUNT_NAME;
    }

    @Override
    public Field<String> field3() {
        return Bank.BANK.ACCOUNT_NUMBER;
    }

    @Override
    public Field<String> field4() {
        return Bank.BANK.ADDRESS;
    }

    @Override
    public Field<String> field5() {
        return Bank.BANK.NAME_BANK;
    }

    @Override
    public Long component1() {
        return getBankId();
    }

    @Override
    public String component2() {
        return getAccountName();
    }

    @Override
    public String component3() {
        return getAccountNumber();
    }

    @Override
    public String component4() {
        return getAddress();
    }

    @Override
    public String component5() {
        return getNameBank();
    }

    @Override
    public Long value1() {
        return getBankId();
    }

    @Override
    public String value2() {
        return getAccountName();
    }

    @Override
    public String value3() {
        return getAccountNumber();
    }

    @Override
    public String value4() {
        return getAddress();
    }

    @Override
    public String value5() {
        return getNameBank();
    }

    @Override
    public BankRecord value1(Long value) {
        setBankId(value);
        return this;
    }

    @Override
    public BankRecord value2(String value) {
        setAccountName(value);
        return this;
    }

    @Override
    public BankRecord value3(String value) {
        setAccountNumber(value);
        return this;
    }

    @Override
    public BankRecord value4(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public BankRecord value5(String value) {
        setNameBank(value);
        return this;
    }

    @Override
    public BankRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankRecord
     */
    public BankRecord() {
        super(Bank.BANK);
    }

    /**
     * Create a detached, initialised BankRecord
     */
    public BankRecord(Long bankId, String accountName, String accountNumber, String address, String nameBank) {
        super(Bank.BANK);

        setBankId(bankId);
        setAccountName(accountName);
        setAccountNumber(accountNumber);
        setAddress(address);
        setNameBank(nameBank);
    }

    /**
     * Create a detached, initialised BankRecord
     */
    public BankRecord(org.jooq.codegen.maven.example.tables.pojos.Bank value) {
        super(Bank.BANK);

        if (value != null) {
            setBankId(value.getBankId());
            setAccountName(value.getAccountName());
            setAccountNumber(value.getAccountNumber());
            setAddress(value.getAddress());
            setNameBank(value.getNameBank());
        }
    }
}
