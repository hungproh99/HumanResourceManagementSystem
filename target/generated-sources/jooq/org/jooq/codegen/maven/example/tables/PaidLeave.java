/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.PaidLeaveRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaidLeave extends TableImpl<PaidLeaveRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.paid_leave</code>
     */
    public static final PaidLeave PAID_LEAVE = new PaidLeave();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaidLeaveRecord> getRecordType() {
        return PaidLeaveRecord.class;
    }

    /**
     * The column <code>human_resource_management.paid_leave.id</code>.
     */
    public final TableField<PaidLeaveRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.paid_leave.paid_leave_reason_id</code>.
     */
    public final TableField<PaidLeaveRecord, Long> PAID_LEAVE_REASON_ID = createField(DSL.name("paid_leave_reason_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.paid_leave.timekeeping_id</code>.
     */
    public final TableField<PaidLeaveRecord, Long> TIMEKEEPING_ID = createField(DSL.name("timekeeping_id"), SQLDataType.BIGINT, this, "");

    private PaidLeave(Name alias, Table<PaidLeaveRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaidLeave(Name alias, Table<PaidLeaveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.paid_leave</code> table
     * reference
     */
    public PaidLeave(String alias) {
        this(DSL.name(alias), PAID_LEAVE);
    }

    /**
     * Create an aliased <code>human_resource_management.paid_leave</code> table
     * reference
     */
    public PaidLeave(Name alias) {
        this(alias, PAID_LEAVE);
    }

    /**
     * Create a <code>human_resource_management.paid_leave</code> table
     * reference
     */
    public PaidLeave() {
        this(DSL.name("paid_leave"), null);
    }

    public <O extends Record> PaidLeave(Table<O> child, ForeignKey<O, PaidLeaveRecord> key) {
        super(child, key, PAID_LEAVE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<PaidLeaveRecord, Long> getIdentity() {
        return (Identity<PaidLeaveRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<PaidLeaveRecord> getPrimaryKey() {
        return Keys.KEY_PAID_LEAVE_PRIMARY;
    }

    @Override
    public List<ForeignKey<PaidLeaveRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FKR9JCCLAJA8I6D8HOF88W3GNPW, Keys.FKQF29PRRWVI8CG9SDKWP0MLC58);
    }

    private transient PaidLeaveReason _paidLeaveReason;
    private transient Timekeeping _timekeeping;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.paid_leave_reason</code> table.
     */
    public PaidLeaveReason paidLeaveReason() {
        if (_paidLeaveReason == null)
            _paidLeaveReason = new PaidLeaveReason(this, Keys.FKR9JCCLAJA8I6D8HOF88W3GNPW);

        return _paidLeaveReason;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.timekeeping</code> table.
     */
    public Timekeeping timekeeping() {
        if (_timekeeping == null)
            _timekeeping = new Timekeeping(this, Keys.FKQF29PRRWVI8CG9SDKWP0MLC58);

        return _timekeeping;
    }

    @Override
    public PaidLeave as(String alias) {
        return new PaidLeave(DSL.name(alias), this);
    }

    @Override
    public PaidLeave as(Name alias) {
        return new PaidLeave(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaidLeave rename(String name) {
        return new PaidLeave(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaidLeave rename(Name name) {
        return new PaidLeave(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
