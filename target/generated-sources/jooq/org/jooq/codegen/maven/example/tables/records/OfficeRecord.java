/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.codegen.maven.example.tables.Office;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfficeRecord extends UpdatableRecordImpl<OfficeRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.office.office_id</code>.
     */
    public OfficeRecord setOfficeId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.office.office_id</code>.
     */
    public Long getOfficeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>human_resource_management.office.address</code>.
     */
    public OfficeRecord setAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.office.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>human_resource_management.office.name</code>.
     */
    public OfficeRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.office.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Office.OFFICE.OFFICE_ID;
    }

    @Override
    public Field<String> field2() {
        return Office.OFFICE.ADDRESS;
    }

    @Override
    public Field<String> field3() {
        return Office.OFFICE.NAME;
    }

    @Override
    public Long component1() {
        return getOfficeId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Long value1() {
        return getOfficeId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public OfficeRecord value1(Long value) {
        setOfficeId(value);
        return this;
    }

    @Override
    public OfficeRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public OfficeRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public OfficeRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OfficeRecord
     */
    public OfficeRecord() {
        super(Office.OFFICE);
    }

    /**
     * Create a detached, initialised OfficeRecord
     */
    public OfficeRecord(Long officeId, String address, String name) {
        super(Office.OFFICE);

        setOfficeId(officeId);
        setAddress(address);
        setName(name);
    }

    /**
     * Create a detached, initialised OfficeRecord
     */
    public OfficeRecord(org.jooq.codegen.maven.example.tables.pojos.Office value) {
        super(Office.OFFICE);

        if (value != null) {
            setOfficeId(value.getOfficeId());
            setAddress(value.getAddress());
            setName(value.getName());
        }
    }
}
