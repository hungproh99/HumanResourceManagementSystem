/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.codegen.maven.example.tables.Overtime;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OvertimeRecord extends UpdatableRecordImpl<OvertimeRecord> implements Record5<Long, LocalTime, LocalTime, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.overtime.overtime_id</code>.
     */
    public OvertimeRecord setOvertimeId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.overtime.overtime_id</code>.
     */
    public Long getOvertimeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>human_resource_management.overtime.end_time</code>.
     */
    public OvertimeRecord setEndTime(LocalTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.overtime.end_time</code>.
     */
    public LocalTime getEndTime() {
        return (LocalTime) get(1);
    }

    /**
     * Setter for <code>human_resource_management.overtime.start_time</code>.
     */
    public OvertimeRecord setStartTime(LocalTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.overtime.start_time</code>.
     */
    public LocalTime getStartTime() {
        return (LocalTime) get(2);
    }

    /**
     * Setter for
     * <code>human_resource_management.overtime.overtime_type_id</code>.
     */
    public OvertimeRecord setOvertimeTypeId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.overtime.overtime_type_id</code>.
     */
    public Long getOvertimeTypeId() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>human_resource_management.overtime.timekeeping_id</code>.
     */
    public OvertimeRecord setTimekeepingId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.overtime.timekeeping_id</code>.
     */
    public Long getTimekeepingId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalTime, LocalTime, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalTime, LocalTime, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Overtime.OVERTIME.OVERTIME_ID;
    }

    @Override
    public Field<LocalTime> field2() {
        return Overtime.OVERTIME.END_TIME;
    }

    @Override
    public Field<LocalTime> field3() {
        return Overtime.OVERTIME.START_TIME;
    }

    @Override
    public Field<Long> field4() {
        return Overtime.OVERTIME.OVERTIME_TYPE_ID;
    }

    @Override
    public Field<Long> field5() {
        return Overtime.OVERTIME.TIMEKEEPING_ID;
    }

    @Override
    public Long component1() {
        return getOvertimeId();
    }

    @Override
    public LocalTime component2() {
        return getEndTime();
    }

    @Override
    public LocalTime component3() {
        return getStartTime();
    }

    @Override
    public Long component4() {
        return getOvertimeTypeId();
    }

    @Override
    public Long component5() {
        return getTimekeepingId();
    }

    @Override
    public Long value1() {
        return getOvertimeId();
    }

    @Override
    public LocalTime value2() {
        return getEndTime();
    }

    @Override
    public LocalTime value3() {
        return getStartTime();
    }

    @Override
    public Long value4() {
        return getOvertimeTypeId();
    }

    @Override
    public Long value5() {
        return getTimekeepingId();
    }

    @Override
    public OvertimeRecord value1(Long value) {
        setOvertimeId(value);
        return this;
    }

    @Override
    public OvertimeRecord value2(LocalTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    public OvertimeRecord value3(LocalTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public OvertimeRecord value4(Long value) {
        setOvertimeTypeId(value);
        return this;
    }

    @Override
    public OvertimeRecord value5(Long value) {
        setTimekeepingId(value);
        return this;
    }

    @Override
    public OvertimeRecord values(Long value1, LocalTime value2, LocalTime value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OvertimeRecord
     */
    public OvertimeRecord() {
        super(Overtime.OVERTIME);
    }

    /**
     * Create a detached, initialised OvertimeRecord
     */
    public OvertimeRecord(Long overtimeId, LocalTime endTime, LocalTime startTime, Long overtimeTypeId, Long timekeepingId) {
        super(Overtime.OVERTIME);

        setOvertimeId(overtimeId);
        setEndTime(endTime);
        setStartTime(startTime);
        setOvertimeTypeId(overtimeTypeId);
        setTimekeepingId(timekeepingId);
    }

    /**
     * Create a detached, initialised OvertimeRecord
     */
    public OvertimeRecord(org.jooq.codegen.maven.example.tables.pojos.Overtime value) {
        super(Overtime.OVERTIME);

        if (value != null) {
            setOvertimeId(value.getOvertimeId());
            setEndTime(value.getEndTime());
            setStartTime(value.getStartTime());
            setOvertimeTypeId(value.getOvertimeTypeId());
            setTimekeepingId(value.getTimekeepingId());
        }
    }
}
