/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OvertimeType implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long   overtimeTypeId;
    private String overtimeType;

    public OvertimeType() {}

    public OvertimeType(OvertimeType value) {
        this.overtimeTypeId = value.overtimeTypeId;
        this.overtimeType = value.overtimeType;
    }

    public OvertimeType(
        Long   overtimeTypeId,
        String overtimeType
    ) {
        this.overtimeTypeId = overtimeTypeId;
        this.overtimeType = overtimeType;
    }

    /**
     * Getter for
     * <code>human_resource_management.overtime_type.overtime_type_id</code>.
     */
    public Long getOvertimeTypeId() {
        return this.overtimeTypeId;
    }

    /**
     * Setter for
     * <code>human_resource_management.overtime_type.overtime_type_id</code>.
     */
    public OvertimeType setOvertimeTypeId(Long overtimeTypeId) {
        this.overtimeTypeId = overtimeTypeId;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.overtime_type.overtime_type</code>.
     */
    public String getOvertimeType() {
        return this.overtimeType;
    }

    /**
     * Setter for
     * <code>human_resource_management.overtime_type.overtime_type</code>.
     */
    public OvertimeType setOvertimeType(String overtimeType) {
        this.overtimeType = overtimeType;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OvertimeType other = (OvertimeType) obj;
        if (this.overtimeTypeId == null) {
            if (other.overtimeTypeId != null)
                return false;
        }
        else if (!this.overtimeTypeId.equals(other.overtimeTypeId))
            return false;
        if (this.overtimeType == null) {
            if (other.overtimeType != null)
                return false;
        }
        else if (!this.overtimeType.equals(other.overtimeType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.overtimeTypeId == null) ? 0 : this.overtimeTypeId.hashCode());
        result = prime * result + ((this.overtimeType == null) ? 0 : this.overtimeType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OvertimeType (");

        sb.append(overtimeTypeId);
        sb.append(", ").append(overtimeType);

        sb.append(")");
        return sb.toString();
    }
}
