/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.RequestNameRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestName extends TableImpl<RequestNameRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.request_name</code>
     */
    public static final RequestName REQUEST_NAME = new RequestName();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RequestNameRecord> getRecordType() {
        return RequestNameRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.request_name.request_name_id</code>.
     */
    public final TableField<RequestNameRecord, Long> REQUEST_NAME_ID = createField(DSL.name("request_name_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.request_name.description</code>.
     */
    public final TableField<RequestNameRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>human_resource_management.request_name.name</code>.
     */
    public final TableField<RequestNameRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>human_resource_management.request_name.policy_id</code>.
     */
    public final TableField<RequestNameRecord, String> POLICY_ID = createField(DSL.name("policy_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.request_name.request_type_id</code>.
     */
    public final TableField<RequestNameRecord, Long> REQUEST_TYPE_ID = createField(DSL.name("request_type_id"), SQLDataType.BIGINT, this, "");

    private RequestName(Name alias, Table<RequestNameRecord> aliased) {
        this(alias, aliased, null);
    }

    private RequestName(Name alias, Table<RequestNameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.request_name</code>
     * table reference
     */
    public RequestName(String alias) {
        this(DSL.name(alias), REQUEST_NAME);
    }

    /**
     * Create an aliased <code>human_resource_management.request_name</code>
     * table reference
     */
    public RequestName(Name alias) {
        this(alias, REQUEST_NAME);
    }

    /**
     * Create a <code>human_resource_management.request_name</code> table
     * reference
     */
    public RequestName() {
        this(DSL.name("request_name"), null);
    }

    public <O extends Record> RequestName(Table<O> child, ForeignKey<O, RequestNameRecord> key) {
        super(child, key, REQUEST_NAME);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<RequestNameRecord, Long> getIdentity() {
        return (Identity<RequestNameRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<RequestNameRecord> getPrimaryKey() {
        return Keys.KEY_REQUEST_NAME_PRIMARY;
    }

    @Override
    public List<ForeignKey<RequestNameRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FKMBYRA74WITRNKLXG1Y88DCDFH, Keys.FK3LNQ8B1L5IXAJNJ9DJI7X4UGV);
    }

    private transient Policy _policy;
    private transient RequestType _requestType;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.policy</code> table.
     */
    public Policy policy() {
        if (_policy == null)
            _policy = new Policy(this, Keys.FKMBYRA74WITRNKLXG1Y88DCDFH);

        return _policy;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.request_type</code> table.
     */
    public RequestType requestType() {
        if (_requestType == null)
            _requestType = new RequestType(this, Keys.FK3LNQ8B1L5IXAJNJ9DJI7X4UGV);

        return _requestType;
    }

    @Override
    public RequestName as(String alias) {
        return new RequestName(DSL.name(alias), this);
    }

    @Override
    public RequestName as(Name alias) {
        return new RequestName(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RequestName rename(String name) {
        return new RequestName(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RequestName rename(Name name) {
        return new RequestName(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
