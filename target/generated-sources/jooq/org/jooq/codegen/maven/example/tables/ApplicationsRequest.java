/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.ApplicationsRequestRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicationsRequest extends TableImpl<ApplicationsRequestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.applications_request</code>
     */
    public static final ApplicationsRequest APPLICATIONS_REQUEST = new ApplicationsRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicationsRequestRecord> getRecordType() {
        return ApplicationsRequestRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.applications_request.application_request_id</code>.
     */
    public final TableField<ApplicationsRequestRecord, Long> APPLICATION_REQUEST_ID = createField(DSL.name("application_request_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.approver</code>.
     */
    public final TableField<ApplicationsRequestRecord, String> APPROVER = createField(DSL.name("approver"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.create_date</code>.
     */
    public final TableField<ApplicationsRequestRecord, LocalDateTime> CREATE_DATE = createField(DSL.name("create_date"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.data</code>.
     */
    public final TableField<ApplicationsRequestRecord, String> DATA = createField(DSL.name("data"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.description</code>.
     */
    public final TableField<ApplicationsRequestRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.duration</code>.
     */
    public final TableField<ApplicationsRequestRecord, LocalDateTime> DURATION = createField(DSL.name("duration"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.is_bookmark</code>.
     */
    public final TableField<ApplicationsRequestRecord, Boolean> IS_BOOKMARK = createField(DSL.name("is_bookmark"), SQLDataType.BIT, this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.is_remind</code>.
     */
    public final TableField<ApplicationsRequestRecord, Boolean> IS_REMIND = createField(DSL.name("is_remind"), SQLDataType.BIT, this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.latest_date</code>.
     */
    public final TableField<ApplicationsRequestRecord, LocalDateTime> LATEST_DATE = createField(DSL.name("latest_date"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.employee_id</code>.
     */
    public final TableField<ApplicationsRequestRecord, String> EMPLOYEE_ID = createField(DSL.name("employee_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.request_name</code>.
     */
    public final TableField<ApplicationsRequestRecord, Long> REQUEST_NAME = createField(DSL.name("request_name"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.request_status</code>.
     */
    public final TableField<ApplicationsRequestRecord, Long> REQUEST_STATUS = createField(DSL.name("request_status"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.applications_request.comment</code>.
     */
    public final TableField<ApplicationsRequestRecord, String> COMMENT = createField(DSL.name("comment"), SQLDataType.VARCHAR(1000), this, "");

    private ApplicationsRequest(Name alias, Table<ApplicationsRequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicationsRequest(Name alias, Table<ApplicationsRequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>human_resource_management.applications_request</code> table
     * reference
     */
    public ApplicationsRequest(String alias) {
        this(DSL.name(alias), APPLICATIONS_REQUEST);
    }

    /**
     * Create an aliased
     * <code>human_resource_management.applications_request</code> table
     * reference
     */
    public ApplicationsRequest(Name alias) {
        this(alias, APPLICATIONS_REQUEST);
    }

    /**
     * Create a <code>human_resource_management.applications_request</code>
     * table reference
     */
    public ApplicationsRequest() {
        this(DSL.name("applications_request"), null);
    }

    public <O extends Record> ApplicationsRequest(Table<O> child, ForeignKey<O, ApplicationsRequestRecord> key) {
        super(child, key, APPLICATIONS_REQUEST);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<ApplicationsRequestRecord, Long> getIdentity() {
        return (Identity<ApplicationsRequestRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ApplicationsRequestRecord> getPrimaryKey() {
        return Keys.KEY_APPLICATIONS_REQUEST_PRIMARY;
    }

    @Override
    public List<ForeignKey<ApplicationsRequestRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK622A09JDBVQRNU55O3W7LBUAF, Keys.FKCY9WCF1O7WQWPPGP7Q9T5B14O, Keys.FKRRXWS4N1MVOQUS84TDE0BFQDG);
    }

    private transient Employee _employee;
    private transient RequestName _requestName;
    private transient RequestStatus _requestStatus;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.employee</code> table.
     */
    public Employee employee() {
        if (_employee == null)
            _employee = new Employee(this, Keys.FK622A09JDBVQRNU55O3W7LBUAF);

        return _employee;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.request_name</code> table.
     */
    public RequestName requestName() {
        if (_requestName == null)
            _requestName = new RequestName(this, Keys.FKCY9WCF1O7WQWPPGP7Q9T5B14O);

        return _requestName;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.request_status</code> table.
     */
    public RequestStatus requestStatus() {
        if (_requestStatus == null)
            _requestStatus = new RequestStatus(this, Keys.FKRRXWS4N1MVOQUS84TDE0BFQDG);

        return _requestStatus;
    }

    @Override
    public ApplicationsRequest as(String alias) {
        return new ApplicationsRequest(DSL.name(alias), this);
    }

    @Override
    public ApplicationsRequest as(Name alias) {
        return new ApplicationsRequest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicationsRequest rename(String name) {
        return new ApplicationsRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicationsRequest rename(Name name) {
        return new ApplicationsRequest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, String, LocalDateTime, String, String, LocalDateTime, Boolean, Boolean, LocalDateTime, String, Long, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
