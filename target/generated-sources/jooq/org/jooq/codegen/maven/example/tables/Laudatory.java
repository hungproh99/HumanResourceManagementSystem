/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.LaudatoryRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Laudatory extends TableImpl<LaudatoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.laudatory</code>
     */
    public static final Laudatory LAUDATORY = new Laudatory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LaudatoryRecord> getRecordType() {
        return LaudatoryRecord.class;
    }

    /**
     * The column <code>human_resource_management.laudatory.laudatory_id</code>.
     */
    public final TableField<LaudatoryRecord, Long> LAUDATORY_ID = createField(DSL.name("laudatory_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>human_resource_management.laudatory.date</code>.
     */
    public final TableField<LaudatoryRecord, LocalDate> DATE = createField(DSL.name("date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>human_resource_management.laudatory.description</code>.
     */
    public final TableField<LaudatoryRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>human_resource_management.laudatory.reward</code>.
     */
    public final TableField<LaudatoryRecord, String> REWARD = createField(DSL.name("reward"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>human_resource_management.laudatory.status</code>.
     */
    public final TableField<LaudatoryRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>human_resource_management.laudatory.title</code>.
     */
    public final TableField<LaudatoryRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.laudatory.laudatory_type</code>.
     */
    public final TableField<LaudatoryRecord, Long> LAUDATORY_TYPE = createField(DSL.name("laudatory_type"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.laudatory.working_information_id</code>.
     */
    public final TableField<LaudatoryRecord, Long> WORKING_INFORMATION_ID = createField(DSL.name("working_information_id"), SQLDataType.BIGINT, this, "");

    private Laudatory(Name alias, Table<LaudatoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Laudatory(Name alias, Table<LaudatoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.laudatory</code> table
     * reference
     */
    public Laudatory(String alias) {
        this(DSL.name(alias), LAUDATORY);
    }

    /**
     * Create an aliased <code>human_resource_management.laudatory</code> table
     * reference
     */
    public Laudatory(Name alias) {
        this(alias, LAUDATORY);
    }

    /**
     * Create a <code>human_resource_management.laudatory</code> table reference
     */
    public Laudatory() {
        this(DSL.name("laudatory"), null);
    }

    public <O extends Record> Laudatory(Table<O> child, ForeignKey<O, LaudatoryRecord> key) {
        super(child, key, LAUDATORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<LaudatoryRecord, Long> getIdentity() {
        return (Identity<LaudatoryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<LaudatoryRecord> getPrimaryKey() {
        return Keys.KEY_LAUDATORY_PRIMARY;
    }

    @Override
    public List<ForeignKey<LaudatoryRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FKDWWDN9LF3A8IPWBM6CVI7CA6W, Keys.FKBGPR6EDK7YYDPS2E6XKLMB3);
    }

    private transient LaudatoryType _laudatoryType;
    private transient WorkingInformation _workingInformation;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.laudatory_type</code> table.
     */
    public LaudatoryType laudatoryType() {
        if (_laudatoryType == null)
            _laudatoryType = new LaudatoryType(this, Keys.FKDWWDN9LF3A8IPWBM6CVI7CA6W);

        return _laudatoryType;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.working_information</code> table.
     */
    public WorkingInformation workingInformation() {
        if (_workingInformation == null)
            _workingInformation = new WorkingInformation(this, Keys.FKBGPR6EDK7YYDPS2E6XKLMB3);

        return _workingInformation;
    }

    @Override
    public Laudatory as(String alias) {
        return new Laudatory(DSL.name(alias), this);
    }

    @Override
    public Laudatory as(Name alias) {
        return new Laudatory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Laudatory rename(String name) {
        return new Laudatory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Laudatory rename(Name name) {
        return new Laudatory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, LocalDate, String, String, String, String, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
