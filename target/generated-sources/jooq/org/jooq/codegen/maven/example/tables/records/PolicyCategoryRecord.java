/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.codegen.maven.example.tables.PolicyCategory;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyCategoryRecord extends UpdatableRecordImpl<PolicyCategoryRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>human_resource_management.policy_category.policy_category_id</code>.
     */
    public PolicyCategoryRecord setPolicyCategoryId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.policy_category.policy_category_id</code>.
     */
    public Long getPolicyCategoryId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>human_resource_management.policy_category.policy_category</code>.
     */
    public PolicyCategoryRecord setPolicyCategory(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.policy_category.policy_category</code>.
     */
    public String getPolicyCategory() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PolicyCategory.POLICY_CATEGORY.POLICY_CATEGORY_ID;
    }

    @Override
    public Field<String> field2() {
        return PolicyCategory.POLICY_CATEGORY.POLICY_CATEGORY_;
    }

    @Override
    public Long component1() {
        return getPolicyCategoryId();
    }

    @Override
    public String component2() {
        return getPolicyCategory();
    }

    @Override
    public Long value1() {
        return getPolicyCategoryId();
    }

    @Override
    public String value2() {
        return getPolicyCategory();
    }

    @Override
    public PolicyCategoryRecord value1(Long value) {
        setPolicyCategoryId(value);
        return this;
    }

    @Override
    public PolicyCategoryRecord value2(String value) {
        setPolicyCategory(value);
        return this;
    }

    @Override
    public PolicyCategoryRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PolicyCategoryRecord
     */
    public PolicyCategoryRecord() {
        super(PolicyCategory.POLICY_CATEGORY);
    }

    /**
     * Create a detached, initialised PolicyCategoryRecord
     */
    public PolicyCategoryRecord(Long policyCategoryId, String policyCategory) {
        super(PolicyCategory.POLICY_CATEGORY);

        setPolicyCategoryId(policyCategoryId);
        setPolicyCategory(policyCategory);
    }

    /**
     * Create a detached, initialised PolicyCategoryRecord
     */
    public PolicyCategoryRecord(org.jooq.codegen.maven.example.tables.pojos.PolicyCategory value) {
        super(PolicyCategory.POLICY_CATEGORY);

        if (value != null) {
            setPolicyCategoryId(value.getPolicyCategoryId());
            setPolicyCategory(value.getPolicyCategory());
        }
    }
}
