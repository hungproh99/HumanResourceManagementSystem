/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.TimekeepingStatusRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimekeepingStatus extends TableImpl<TimekeepingStatusRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.timekeeping_status</code>
     */
    public static final TimekeepingStatus TIMEKEEPING_STATUS = new TimekeepingStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimekeepingStatusRecord> getRecordType() {
        return TimekeepingStatusRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.timekeeping_status.type_id</code>.
     */
    public final TableField<TimekeepingStatusRecord, Long> TYPE_ID = createField(DSL.name("type_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.timekeeping_status.name</code>.
     */
    public final TableField<TimekeepingStatusRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    private TimekeepingStatus(Name alias, Table<TimekeepingStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private TimekeepingStatus(Name alias, Table<TimekeepingStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>human_resource_management.timekeeping_status</code> table reference
     */
    public TimekeepingStatus(String alias) {
        this(DSL.name(alias), TIMEKEEPING_STATUS);
    }

    /**
     * Create an aliased
     * <code>human_resource_management.timekeeping_status</code> table reference
     */
    public TimekeepingStatus(Name alias) {
        this(alias, TIMEKEEPING_STATUS);
    }

    /**
     * Create a <code>human_resource_management.timekeeping_status</code> table
     * reference
     */
    public TimekeepingStatus() {
        this(DSL.name("timekeeping_status"), null);
    }

    public <O extends Record> TimekeepingStatus(Table<O> child, ForeignKey<O, TimekeepingStatusRecord> key) {
        super(child, key, TIMEKEEPING_STATUS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<TimekeepingStatusRecord, Long> getIdentity() {
        return (Identity<TimekeepingStatusRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<TimekeepingStatusRecord> getPrimaryKey() {
        return Keys.KEY_TIMEKEEPING_STATUS_PRIMARY;
    }

    @Override
    public TimekeepingStatus as(String alias) {
        return new TimekeepingStatus(DSL.name(alias), this);
    }

    @Override
    public TimekeepingStatus as(Name alias) {
        return new TimekeepingStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TimekeepingStatus rename(String name) {
        return new TimekeepingStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TimekeepingStatus rename(Name name) {
        return new TimekeepingStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
