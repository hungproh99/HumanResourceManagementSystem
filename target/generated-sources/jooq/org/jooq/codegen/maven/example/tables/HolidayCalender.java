/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.HolidayCalenderRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HolidayCalender extends TableImpl<HolidayCalenderRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.holiday_calender</code>
     */
    public static final HolidayCalender HOLIDAY_CALENDER = new HolidayCalender();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HolidayCalenderRecord> getRecordType() {
        return HolidayCalenderRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.holiday_calender.holiday_calender_id</code>.
     */
    public final TableField<HolidayCalenderRecord, Long> HOLIDAY_CALENDER_ID = createField(DSL.name("holiday_calender_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.holiday_calender.end_date</code>.
     */
    public final TableField<HolidayCalenderRecord, LocalDate> END_DATE = createField(DSL.name("end_date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column
     * <code>human_resource_management.holiday_calender.holiday_name</code>.
     */
    public final TableField<HolidayCalenderRecord, String> HOLIDAY_NAME = createField(DSL.name("holiday_name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.holiday_calender.start_date</code>.
     */
    public final TableField<HolidayCalenderRecord, LocalDate> START_DATE = createField(DSL.name("start_date"), SQLDataType.LOCALDATE, this, "");

    private HolidayCalender(Name alias, Table<HolidayCalenderRecord> aliased) {
        this(alias, aliased, null);
    }

    private HolidayCalender(Name alias, Table<HolidayCalenderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.holiday_calender</code>
     * table reference
     */
    public HolidayCalender(String alias) {
        this(DSL.name(alias), HOLIDAY_CALENDER);
    }

    /**
     * Create an aliased <code>human_resource_management.holiday_calender</code>
     * table reference
     */
    public HolidayCalender(Name alias) {
        this(alias, HOLIDAY_CALENDER);
    }

    /**
     * Create a <code>human_resource_management.holiday_calender</code> table
     * reference
     */
    public HolidayCalender() {
        this(DSL.name("holiday_calender"), null);
    }

    public <O extends Record> HolidayCalender(Table<O> child, ForeignKey<O, HolidayCalenderRecord> key) {
        super(child, key, HOLIDAY_CALENDER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<HolidayCalenderRecord, Long> getIdentity() {
        return (Identity<HolidayCalenderRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<HolidayCalenderRecord> getPrimaryKey() {
        return Keys.KEY_HOLIDAY_CALENDER_PRIMARY;
    }

    @Override
    public HolidayCalender as(String alias) {
        return new HolidayCalender(DSL.name(alias), this);
    }

    @Override
    public HolidayCalender as(Name alias) {
        return new HolidayCalender(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HolidayCalender rename(String name) {
        return new HolidayCalender(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HolidayCalender rename(Name name) {
        return new HolidayCalender(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDate, String, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
