/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.tables.AdvancesSalary;
import org.jooq.codegen.maven.example.tables.ApplicationsRequest;
import org.jooq.codegen.maven.example.tables.Area;
import org.jooq.codegen.maven.example.tables.Bank;
import org.jooq.codegen.maven.example.tables.BonusSalary;
import org.jooq.codegen.maven.example.tables.BonusType;
import org.jooq.codegen.maven.example.tables.CategoryCompanyAsset;
import org.jooq.codegen.maven.example.tables.CheckinCheckout;
import org.jooq.codegen.maven.example.tables.ContractType;
import org.jooq.codegen.maven.example.tables.DeductionSalary;
import org.jooq.codegen.maven.example.tables.DeductionType;
import org.jooq.codegen.maven.example.tables.Education;
import org.jooq.codegen.maven.example.tables.Employee;
import org.jooq.codegen.maven.example.tables.EmployeeAllowance;
import org.jooq.codegen.maven.example.tables.EmployeeAsset;
import org.jooq.codegen.maven.example.tables.EmployeeInsurance;
import org.jooq.codegen.maven.example.tables.EmployeeTax;
import org.jooq.codegen.maven.example.tables.EmployeeType;
import org.jooq.codegen.maven.example.tables.GradeType;
import org.jooq.codegen.maven.example.tables.HolidayCalender;
import org.jooq.codegen.maven.example.tables.IdentityCard;
import org.jooq.codegen.maven.example.tables.Job;
import org.jooq.codegen.maven.example.tables.LeaveCompany;
import org.jooq.codegen.maven.example.tables.LeaveCompanyReason;
import org.jooq.codegen.maven.example.tables.ListTimekeepingStatus;
import org.jooq.codegen.maven.example.tables.Office;
import org.jooq.codegen.maven.example.tables.Overtime;
import org.jooq.codegen.maven.example.tables.OvertimeType;
import org.jooq.codegen.maven.example.tables.PaidLeave;
import org.jooq.codegen.maven.example.tables.PaidLeaveReason;
import org.jooq.codegen.maven.example.tables.Policy;
import org.jooq.codegen.maven.example.tables.PolicyCategory;
import org.jooq.codegen.maven.example.tables.PolicyName;
import org.jooq.codegen.maven.example.tables.PolicyType;
import org.jooq.codegen.maven.example.tables.RelativeInformation;
import org.jooq.codegen.maven.example.tables.RelativeType;
import org.jooq.codegen.maven.example.tables.RequestName;
import org.jooq.codegen.maven.example.tables.RequestStatus;
import org.jooq.codegen.maven.example.tables.RequestType;
import org.jooq.codegen.maven.example.tables.ReviewRequest;
import org.jooq.codegen.maven.example.tables.ReviewSalary;
import org.jooq.codegen.maven.example.tables.RoleType;
import org.jooq.codegen.maven.example.tables.SalaryContract;
import org.jooq.codegen.maven.example.tables.SalaryMonthly;
import org.jooq.codegen.maven.example.tables.SalaryStatus;
import org.jooq.codegen.maven.example.tables.Timekeeping;
import org.jooq.codegen.maven.example.tables.TimekeepingStatus;
import org.jooq.codegen.maven.example.tables.WorkingContract;
import org.jooq.codegen.maven.example.tables.WorkingHistory;
import org.jooq.codegen.maven.example.tables.WorkingPlace;
import org.jooq.codegen.maven.example.tables.WorkingType;
import org.jooq.codegen.maven.example.tables.records.AdvancesSalaryRecord;
import org.jooq.codegen.maven.example.tables.records.ApplicationsRequestRecord;
import org.jooq.codegen.maven.example.tables.records.AreaRecord;
import org.jooq.codegen.maven.example.tables.records.BankRecord;
import org.jooq.codegen.maven.example.tables.records.BonusSalaryRecord;
import org.jooq.codegen.maven.example.tables.records.BonusTypeRecord;
import org.jooq.codegen.maven.example.tables.records.CategoryCompanyAssetRecord;
import org.jooq.codegen.maven.example.tables.records.CheckinCheckoutRecord;
import org.jooq.codegen.maven.example.tables.records.ContractTypeRecord;
import org.jooq.codegen.maven.example.tables.records.DeductionSalaryRecord;
import org.jooq.codegen.maven.example.tables.records.DeductionTypeRecord;
import org.jooq.codegen.maven.example.tables.records.EducationRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeeAllowanceRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeeAssetRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeeInsuranceRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeeRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeeTaxRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeeTypeRecord;
import org.jooq.codegen.maven.example.tables.records.GradeTypeRecord;
import org.jooq.codegen.maven.example.tables.records.HolidayCalenderRecord;
import org.jooq.codegen.maven.example.tables.records.IdentityCardRecord;
import org.jooq.codegen.maven.example.tables.records.JobRecord;
import org.jooq.codegen.maven.example.tables.records.LeaveCompanyReasonRecord;
import org.jooq.codegen.maven.example.tables.records.LeaveCompanyRecord;
import org.jooq.codegen.maven.example.tables.records.ListTimekeepingStatusRecord;
import org.jooq.codegen.maven.example.tables.records.OfficeRecord;
import org.jooq.codegen.maven.example.tables.records.OvertimeRecord;
import org.jooq.codegen.maven.example.tables.records.OvertimeTypeRecord;
import org.jooq.codegen.maven.example.tables.records.PaidLeaveReasonRecord;
import org.jooq.codegen.maven.example.tables.records.PaidLeaveRecord;
import org.jooq.codegen.maven.example.tables.records.PolicyCategoryRecord;
import org.jooq.codegen.maven.example.tables.records.PolicyNameRecord;
import org.jooq.codegen.maven.example.tables.records.PolicyRecord;
import org.jooq.codegen.maven.example.tables.records.PolicyTypeRecord;
import org.jooq.codegen.maven.example.tables.records.RelativeInformationRecord;
import org.jooq.codegen.maven.example.tables.records.RelativeTypeRecord;
import org.jooq.codegen.maven.example.tables.records.RequestNameRecord;
import org.jooq.codegen.maven.example.tables.records.RequestStatusRecord;
import org.jooq.codegen.maven.example.tables.records.RequestTypeRecord;
import org.jooq.codegen.maven.example.tables.records.ReviewRequestRecord;
import org.jooq.codegen.maven.example.tables.records.ReviewSalaryRecord;
import org.jooq.codegen.maven.example.tables.records.RoleTypeRecord;
import org.jooq.codegen.maven.example.tables.records.SalaryContractRecord;
import org.jooq.codegen.maven.example.tables.records.SalaryMonthlyRecord;
import org.jooq.codegen.maven.example.tables.records.SalaryStatusRecord;
import org.jooq.codegen.maven.example.tables.records.TimekeepingRecord;
import org.jooq.codegen.maven.example.tables.records.TimekeepingStatusRecord;
import org.jooq.codegen.maven.example.tables.records.WorkingContractRecord;
import org.jooq.codegen.maven.example.tables.records.WorkingHistoryRecord;
import org.jooq.codegen.maven.example.tables.records.WorkingPlaceRecord;
import org.jooq.codegen.maven.example.tables.records.WorkingTypeRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * human_resource_management.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdvancesSalaryRecord> KEY_ADVANCES_SALARY_PRIMARY = Internal.createUniqueKey(AdvancesSalary.ADVANCES_SALARY, DSL.name("KEY_advances_salary_PRIMARY"), new TableField[] { AdvancesSalary.ADVANCES_SALARY.ADVANCES_ID }, true);
    public static final UniqueKey<ApplicationsRequestRecord> KEY_APPLICATIONS_REQUEST_PRIMARY = Internal.createUniqueKey(ApplicationsRequest.APPLICATIONS_REQUEST, DSL.name("KEY_applications_request_PRIMARY"), new TableField[] { ApplicationsRequest.APPLICATIONS_REQUEST.APPLICATION_REQUEST_ID }, true);
    public static final UniqueKey<AreaRecord> KEY_AREA_PRIMARY = Internal.createUniqueKey(Area.AREA, DSL.name("KEY_area_PRIMARY"), new TableField[] { Area.AREA.AREA_ID }, true);
    public static final UniqueKey<BankRecord> KEY_BANK_PRIMARY = Internal.createUniqueKey(Bank.BANK, DSL.name("KEY_bank_PRIMARY"), new TableField[] { Bank.BANK.BANK_ID }, true);
    public static final UniqueKey<BonusSalaryRecord> KEY_BONUS_SALARY_PRIMARY = Internal.createUniqueKey(BonusSalary.BONUS_SALARY, DSL.name("KEY_bonus_salary_PRIMARY"), new TableField[] { BonusSalary.BONUS_SALARY.BONUS_ID }, true);
    public static final UniqueKey<BonusTypeRecord> KEY_BONUS_TYPE_PRIMARY = Internal.createUniqueKey(BonusType.BONUS_TYPE, DSL.name("KEY_bonus_type_PRIMARY"), new TableField[] { BonusType.BONUS_TYPE.BONUS_TYPE_ID }, true);
    public static final UniqueKey<CategoryCompanyAssetRecord> KEY_CATEGORY_COMPANY_ASSET_PRIMARY = Internal.createUniqueKey(CategoryCompanyAsset.CATEGORY_COMPANY_ASSET, DSL.name("KEY_category_company_asset_PRIMARY"), new TableField[] { CategoryCompanyAsset.CATEGORY_COMPANY_ASSET.COMPANY_ASSET_ID }, true);
    public static final UniqueKey<CheckinCheckoutRecord> KEY_CHECKIN_CHECKOUT_PRIMARY = Internal.createUniqueKey(CheckinCheckout.CHECKIN_CHECKOUT, DSL.name("KEY_checkin_checkout_PRIMARY"), new TableField[] { CheckinCheckout.CHECKIN_CHECKOUT.CHECKIN_CHECKOUT_ID }, true);
    public static final UniqueKey<ContractTypeRecord> KEY_CONTRACT_TYPE_PRIMARY = Internal.createUniqueKey(ContractType.CONTRACT_TYPE, DSL.name("KEY_contract_type_PRIMARY"), new TableField[] { ContractType.CONTRACT_TYPE.TYPE_ID }, true);
    public static final UniqueKey<DeductionSalaryRecord> KEY_DEDUCTION_SALARY_PRIMARY = Internal.createUniqueKey(DeductionSalary.DEDUCTION_SALARY, DSL.name("KEY_deduction_salary_PRIMARY"), new TableField[] { DeductionSalary.DEDUCTION_SALARY.DEDUCTION_ID }, true);
    public static final UniqueKey<DeductionTypeRecord> KEY_DEDUCTION_TYPE_PRIMARY = Internal.createUniqueKey(DeductionType.DEDUCTION_TYPE, DSL.name("KEY_deduction_type_PRIMARY"), new TableField[] { DeductionType.DEDUCTION_TYPE.DEDUCTION_TYPE_ID }, true);
    public static final UniqueKey<EducationRecord> KEY_EDUCATION_PRIMARY = Internal.createUniqueKey(Education.EDUCATION, DSL.name("KEY_education_PRIMARY"), new TableField[] { Education.EDUCATION.EDUCATION_ID }, true);
    public static final UniqueKey<EmployeeRecord> KEY_EMPLOYEE_PRIMARY = Internal.createUniqueKey(Employee.EMPLOYEE, DSL.name("KEY_employee_PRIMARY"), new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final UniqueKey<EmployeeAllowanceRecord> KEY_EMPLOYEE_ALLOWANCE_PRIMARY = Internal.createUniqueKey(EmployeeAllowance.EMPLOYEE_ALLOWANCE, DSL.name("KEY_employee_allowance_PRIMARY"), new TableField[] { EmployeeAllowance.EMPLOYEE_ALLOWANCE.EMPLOYEE_ALLOWANCE_ID }, true);
    public static final UniqueKey<EmployeeAssetRecord> KEY_EMPLOYEE_ASSET_PRIMARY = Internal.createUniqueKey(EmployeeAsset.EMPLOYEE_ASSET, DSL.name("KEY_employee_asset_PRIMARY"), new TableField[] { EmployeeAsset.EMPLOYEE_ASSET.EMPLOYEE_ASSET_ID }, true);
    public static final UniqueKey<EmployeeInsuranceRecord> KEY_EMPLOYEE_INSURANCE_PRIMARY = Internal.createUniqueKey(EmployeeInsurance.EMPLOYEE_INSURANCE, DSL.name("KEY_employee_insurance_PRIMARY"), new TableField[] { EmployeeInsurance.EMPLOYEE_INSURANCE.EMPLOYEE_INSURANCE_ID }, true);
    public static final UniqueKey<EmployeeTaxRecord> KEY_EMPLOYEE_TAX_PRIMARY = Internal.createUniqueKey(EmployeeTax.EMPLOYEE_TAX, DSL.name("KEY_employee_tax_PRIMARY"), new TableField[] { EmployeeTax.EMPLOYEE_TAX.EMPLOYEE_TAX_ID }, true);
    public static final UniqueKey<EmployeeTypeRecord> KEY_EMPLOYEE_TYPE_PRIMARY = Internal.createUniqueKey(EmployeeType.EMPLOYEE_TYPE, DSL.name("KEY_employee_type_PRIMARY"), new TableField[] { EmployeeType.EMPLOYEE_TYPE.TYPE_ID }, true);
    public static final UniqueKey<GradeTypeRecord> KEY_GRADE_TYPE_PRIMARY = Internal.createUniqueKey(GradeType.GRADE_TYPE, DSL.name("KEY_grade_type_PRIMARY"), new TableField[] { GradeType.GRADE_TYPE.GRADE_ID }, true);
    public static final UniqueKey<HolidayCalenderRecord> KEY_HOLIDAY_CALENDER_PRIMARY = Internal.createUniqueKey(HolidayCalender.HOLIDAY_CALENDER, DSL.name("KEY_holiday_calender_PRIMARY"), new TableField[] { HolidayCalender.HOLIDAY_CALENDER.HOLIDAY_CALENDER_ID }, true);
    public static final UniqueKey<IdentityCardRecord> KEY_IDENTITY_CARD_PRIMARY = Internal.createUniqueKey(IdentityCard.IDENTITY_CARD, DSL.name("KEY_identity_card_PRIMARY"), new TableField[] { IdentityCard.IDENTITY_CARD.CARD_ID }, true);
    public static final UniqueKey<JobRecord> KEY_JOB_PRIMARY = Internal.createUniqueKey(Job.JOB, DSL.name("KEY_job_PRIMARY"), new TableField[] { Job.JOB.JOB_ID }, true);
    public static final UniqueKey<LeaveCompanyRecord> KEY_LEAVE_COMPANY_PRIMARY = Internal.createUniqueKey(LeaveCompany.LEAVE_COMPANY, DSL.name("KEY_leave_company_PRIMARY"), new TableField[] { LeaveCompany.LEAVE_COMPANY.ID }, true);
    public static final UniqueKey<LeaveCompanyReasonRecord> KEY_LEAVE_COMPANY_REASON_PRIMARY = Internal.createUniqueKey(LeaveCompanyReason.LEAVE_COMPANY_REASON, DSL.name("KEY_leave_company_reason_PRIMARY"), new TableField[] { LeaveCompanyReason.LEAVE_COMPANY_REASON.REASON_ID }, true);
    public static final UniqueKey<ListTimekeepingStatusRecord> KEY_LIST_TIMEKEEPING_STATUS_PRIMARY = Internal.createUniqueKey(ListTimekeepingStatus.LIST_TIMEKEEPING_STATUS, DSL.name("KEY_list_timekeeping_status_PRIMARY"), new TableField[] { ListTimekeepingStatus.LIST_TIMEKEEPING_STATUS.LIST_ID }, true);
    public static final UniqueKey<OfficeRecord> KEY_OFFICE_PRIMARY = Internal.createUniqueKey(Office.OFFICE, DSL.name("KEY_office_PRIMARY"), new TableField[] { Office.OFFICE.OFFICE_ID }, true);
    public static final UniqueKey<OvertimeRecord> KEY_OVERTIME_PRIMARY = Internal.createUniqueKey(Overtime.OVERTIME, DSL.name("KEY_overtime_PRIMARY"), new TableField[] { Overtime.OVERTIME.OVERTIME_ID }, true);
    public static final UniqueKey<OvertimeTypeRecord> KEY_OVERTIME_TYPE_PRIMARY = Internal.createUniqueKey(OvertimeType.OVERTIME_TYPE, DSL.name("KEY_overtime_type_PRIMARY"), new TableField[] { OvertimeType.OVERTIME_TYPE.OVERTIME_TYPE_ID }, true);
    public static final UniqueKey<PaidLeaveRecord> KEY_PAID_LEAVE_PRIMARY = Internal.createUniqueKey(PaidLeave.PAID_LEAVE, DSL.name("KEY_paid_leave_PRIMARY"), new TableField[] { PaidLeave.PAID_LEAVE.ID }, true);
    public static final UniqueKey<PaidLeaveReasonRecord> KEY_PAID_LEAVE_REASON_PRIMARY = Internal.createUniqueKey(PaidLeaveReason.PAID_LEAVE_REASON, DSL.name("KEY_paid_leave_reason_PRIMARY"), new TableField[] { PaidLeaveReason.PAID_LEAVE_REASON.REASON_ID }, true);
    public static final UniqueKey<PolicyRecord> KEY_POLICY_PRIMARY = Internal.createUniqueKey(Policy.POLICY, DSL.name("KEY_policy_PRIMARY"), new TableField[] { Policy.POLICY.POLICY_ID }, true);
    public static final UniqueKey<PolicyCategoryRecord> KEY_POLICY_CATEGORY_PRIMARY = Internal.createUniqueKey(PolicyCategory.POLICY_CATEGORY, DSL.name("KEY_policy_category_PRIMARY"), new TableField[] { PolicyCategory.POLICY_CATEGORY.POLICY_CATEGORY_ID }, true);
    public static final UniqueKey<PolicyNameRecord> KEY_POLICY_NAME_PRIMARY = Internal.createUniqueKey(PolicyName.POLICY_NAME, DSL.name("KEY_policy_name_PRIMARY"), new TableField[] { PolicyName.POLICY_NAME.POLICY_NAME_ID }, true);
    public static final UniqueKey<PolicyTypeRecord> KEY_POLICY_TYPE_PRIMARY = Internal.createUniqueKey(PolicyType.POLICY_TYPE, DSL.name("KEY_policy_type_PRIMARY"), new TableField[] { PolicyType.POLICY_TYPE.POLICY_TYPE_ID }, true);
    public static final UniqueKey<RelativeInformationRecord> KEY_RELATIVE_INFORMATION_PRIMARY = Internal.createUniqueKey(RelativeInformation.RELATIVE_INFORMATION, DSL.name("KEY_relative_information_PRIMARY"), new TableField[] { RelativeInformation.RELATIVE_INFORMATION.RELATIVE_ID }, true);
    public static final UniqueKey<RelativeTypeRecord> KEY_RELATIVE_TYPE_PRIMARY = Internal.createUniqueKey(RelativeType.RELATIVE_TYPE, DSL.name("KEY_relative_type_PRIMARY"), new TableField[] { RelativeType.RELATIVE_TYPE.TYPE_ID }, true);
    public static final UniqueKey<RequestNameRecord> KEY_REQUEST_NAME_PRIMARY = Internal.createUniqueKey(RequestName.REQUEST_NAME, DSL.name("KEY_request_name_PRIMARY"), new TableField[] { RequestName.REQUEST_NAME.REQUEST_NAME_ID }, true);
    public static final UniqueKey<RequestStatusRecord> KEY_REQUEST_STATUS_PRIMARY = Internal.createUniqueKey(RequestStatus.REQUEST_STATUS, DSL.name("KEY_request_status_PRIMARY"), new TableField[] { RequestStatus.REQUEST_STATUS.TYPE_ID }, true);
    public static final UniqueKey<RequestTypeRecord> KEY_REQUEST_TYPE_PRIMARY = Internal.createUniqueKey(RequestType.REQUEST_TYPE, DSL.name("KEY_request_type_PRIMARY"), new TableField[] { RequestType.REQUEST_TYPE.TYPE_ID }, true);
    public static final UniqueKey<ReviewRequestRecord> KEY_REVIEW_REQUEST_PRIMARY = Internal.createUniqueKey(ReviewRequest.REVIEW_REQUEST, DSL.name("KEY_review_request_PRIMARY"), new TableField[] { ReviewRequest.REVIEW_REQUEST.REVIEW_ID }, true);
    public static final UniqueKey<ReviewSalaryRecord> KEY_REVIEW_SALARY_PRIMARY = Internal.createUniqueKey(ReviewSalary.REVIEW_SALARY, DSL.name("KEY_review_salary_PRIMARY"), new TableField[] { ReviewSalary.REVIEW_SALARY.REVIEW_ID }, true);
    public static final UniqueKey<RoleTypeRecord> KEY_ROLE_TYPE_PRIMARY = Internal.createUniqueKey(RoleType.ROLE_TYPE, DSL.name("KEY_role_type_PRIMARY"), new TableField[] { RoleType.ROLE_TYPE.TYPE_ID }, true);
    public static final UniqueKey<SalaryContractRecord> KEY_SALARY_CONTRACT_PRIMARY = Internal.createUniqueKey(SalaryContract.SALARY_CONTRACT, DSL.name("KEY_salary_contract_PRIMARY"), new TableField[] { SalaryContract.SALARY_CONTRACT.SALARY_CONTRACT_ID }, true);
    public static final UniqueKey<SalaryMonthlyRecord> KEY_SALARY_MONTHLY_PRIMARY = Internal.createUniqueKey(SalaryMonthly.SALARY_MONTHLY, DSL.name("KEY_salary_monthly_PRIMARY"), new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_ID }, true);
    public static final UniqueKey<SalaryStatusRecord> KEY_SALARY_STATUS_PRIMARY = Internal.createUniqueKey(SalaryStatus.SALARY_STATUS, DSL.name("KEY_salary_status_PRIMARY"), new TableField[] { SalaryStatus.SALARY_STATUS.STATUS_ID }, true);
    public static final UniqueKey<TimekeepingRecord> KEY_TIMEKEEPING_PRIMARY = Internal.createUniqueKey(Timekeeping.TIMEKEEPING, DSL.name("KEY_timekeeping_PRIMARY"), new TableField[] { Timekeeping.TIMEKEEPING.TIMEKEEPING_ID }, true);
    public static final UniqueKey<TimekeepingStatusRecord> KEY_TIMEKEEPING_STATUS_PRIMARY = Internal.createUniqueKey(TimekeepingStatus.TIMEKEEPING_STATUS, DSL.name("KEY_timekeeping_status_PRIMARY"), new TableField[] { TimekeepingStatus.TIMEKEEPING_STATUS.TYPE_ID }, true);
    public static final UniqueKey<WorkingContractRecord> KEY_WORKING_CONTRACT_PRIMARY = Internal.createUniqueKey(WorkingContract.WORKING_CONTRACT, DSL.name("KEY_working_contract_PRIMARY"), new TableField[] { WorkingContract.WORKING_CONTRACT.WORKING_CONTRACT_ID }, true);
    public static final UniqueKey<WorkingHistoryRecord> KEY_WORKING_HISTORY_PRIMARY = Internal.createUniqueKey(WorkingHistory.WORKING_HISTORY, DSL.name("KEY_working_history_PRIMARY"), new TableField[] { WorkingHistory.WORKING_HISTORY.WORKING_HISTORY_ID }, true);
    public static final UniqueKey<WorkingPlaceRecord> KEY_WORKING_PLACE_PRIMARY = Internal.createUniqueKey(WorkingPlace.WORKING_PLACE, DSL.name("KEY_working_place_PRIMARY"), new TableField[] { WorkingPlace.WORKING_PLACE.WORKING_PLACE_ID }, true);
    public static final UniqueKey<WorkingTypeRecord> KEY_WORKING_TYPE_PRIMARY = Internal.createUniqueKey(WorkingType.WORKING_TYPE, DSL.name("KEY_working_type_PRIMARY"), new TableField[] { WorkingType.WORKING_TYPE.TYPE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AdvancesSalaryRecord, SalaryMonthlyRecord> FKPM5ACHJSHMBHOGWBR5QVY5HLM = Internal.createForeignKey(AdvancesSalary.ADVANCES_SALARY, DSL.name("FKpm5achjshmbhogwbr5qvy5hlm"), new TableField[] { AdvancesSalary.ADVANCES_SALARY.SALARY_ID }, Keys.KEY_SALARY_MONTHLY_PRIMARY, new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_ID }, true);
    public static final ForeignKey<ApplicationsRequestRecord, EmployeeRecord> FK622A09JDBVQRNU55O3W7LBUAF = Internal.createForeignKey(ApplicationsRequest.APPLICATIONS_REQUEST, DSL.name("FK622a09jdbvqrnu55o3w7lbuaf"), new TableField[] { ApplicationsRequest.APPLICATIONS_REQUEST.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<ApplicationsRequestRecord, RequestNameRecord> FKCY9WCF1O7WQWPPGP7Q9T5B14O = Internal.createForeignKey(ApplicationsRequest.APPLICATIONS_REQUEST, DSL.name("FKcy9wcf1o7wqwppgp7q9t5b14o"), new TableField[] { ApplicationsRequest.APPLICATIONS_REQUEST.REQUEST_NAME }, Keys.KEY_REQUEST_NAME_PRIMARY, new TableField[] { RequestName.REQUEST_NAME.REQUEST_NAME_ID }, true);
    public static final ForeignKey<ApplicationsRequestRecord, RequestStatusRecord> FKRRXWS4N1MVOQUS84TDE0BFQDG = Internal.createForeignKey(ApplicationsRequest.APPLICATIONS_REQUEST, DSL.name("FKrrxws4n1mvoqus84tde0bfqdg"), new TableField[] { ApplicationsRequest.APPLICATIONS_REQUEST.REQUEST_STATUS }, Keys.KEY_REQUEST_STATUS_PRIMARY, new TableField[] { RequestStatus.REQUEST_STATUS.TYPE_ID }, true);
    public static final ForeignKey<AreaRecord, EmployeeRecord> FKDA0VK3F37V36V40HEP94LYC0F = Internal.createForeignKey(Area.AREA, DSL.name("FKda0vk3f37v36v40hep94lyc0f"), new TableField[] { Area.AREA.MANAGER_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<BonusSalaryRecord, SalaryMonthlyRecord> FKKTYVYCH5175BNVQE1R7N01I9E = Internal.createForeignKey(BonusSalary.BONUS_SALARY, DSL.name("FKktyvych5175bnvqe1r7n01i9e"), new TableField[] { BonusSalary.BONUS_SALARY.SALARY_ID }, Keys.KEY_SALARY_MONTHLY_PRIMARY, new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_ID }, true);
    public static final ForeignKey<BonusSalaryRecord, BonusTypeRecord> FKSBQE39PRU0AEPFVKO83H1MG8I = Internal.createForeignKey(BonusSalary.BONUS_SALARY, DSL.name("FKsbqe39pru0aepfvko83h1mg8i"), new TableField[] { BonusSalary.BONUS_SALARY.BONUS_TYPE_ID }, Keys.KEY_BONUS_TYPE_PRIMARY, new TableField[] { BonusType.BONUS_TYPE.BONUS_TYPE_ID }, true);
    public static final ForeignKey<CheckinCheckoutRecord, TimekeepingRecord> FK7UU75DAK6H9644DB7XQNOTV30 = Internal.createForeignKey(CheckinCheckout.CHECKIN_CHECKOUT, DSL.name("FK7uu75dak6h9644db7xqnotv30"), new TableField[] { CheckinCheckout.CHECKIN_CHECKOUT.TIMEKEEPING_ID }, Keys.KEY_TIMEKEEPING_PRIMARY, new TableField[] { Timekeeping.TIMEKEEPING.TIMEKEEPING_ID }, true);
    public static final ForeignKey<DeductionSalaryRecord, SalaryMonthlyRecord> FK17TRMN6DWG6R1AAD0U8TLK5FN = Internal.createForeignKey(DeductionSalary.DEDUCTION_SALARY, DSL.name("FK17trmn6dwg6r1aad0u8tlk5fn"), new TableField[] { DeductionSalary.DEDUCTION_SALARY.SALARY_ID }, Keys.KEY_SALARY_MONTHLY_PRIMARY, new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_ID }, true);
    public static final ForeignKey<DeductionSalaryRecord, DeductionTypeRecord> FK78H12DKDC7SWA1XIIU8UB6H2N = Internal.createForeignKey(DeductionSalary.DEDUCTION_SALARY, DSL.name("FK78h12dkdc7swa1xiiu8ub6h2n"), new TableField[] { DeductionSalary.DEDUCTION_SALARY.DEDUCTION_TYPE_ID }, Keys.KEY_DEDUCTION_TYPE_PRIMARY, new TableField[] { DeductionType.DEDUCTION_TYPE.DEDUCTION_TYPE_ID }, true);
    public static final ForeignKey<EducationRecord, EmployeeRecord> FKRPHG8GBX569XVJ1TXKKT91UY4 = Internal.createForeignKey(Education.EDUCATION, DSL.name("FKrphg8gbx569xvj1txkkt91uy4"), new TableField[] { Education.EDUCATION.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<EmployeeRecord, IdentityCardRecord> FKE4GSS4EY1FU5MXPE82EQNVAC6 = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("FKe4gss4ey1fu5mxpe82eqnvac6"), new TableField[] { Employee.EMPLOYEE.CARD_ID }, Keys.KEY_IDENTITY_CARD_PRIMARY, new TableField[] { IdentityCard.IDENTITY_CARD.CARD_ID }, true);
    public static final ForeignKey<EmployeeRecord, BankRecord> FKICPTSO0QH4VMWT76BGF5HM9P6 = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("FKicptso0qh4vmwt76bgf5hm9p6"), new TableField[] { Employee.EMPLOYEE.BANK_ID }, Keys.KEY_BANK_PRIMARY, new TableField[] { Bank.BANK.BANK_ID }, true);
    public static final ForeignKey<EmployeeRecord, EmployeeTypeRecord> FKKS0JNJWHW9TJWA2B1L0KLV1FB = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("FKks0jnjwhw9tjwa2b1l0klv1fb"), new TableField[] { Employee.EMPLOYEE.EMPLOYEE_TYPE_ID }, Keys.KEY_EMPLOYEE_TYPE_PRIMARY, new TableField[] { EmployeeType.EMPLOYEE_TYPE.TYPE_ID }, true);
    public static final ForeignKey<EmployeeRecord, RoleTypeRecord> FKQSQU0215R8TO2N2EJJ7EJCIMV = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("FKqsqu0215r8to2n2ejj7ejcimv"), new TableField[] { Employee.EMPLOYEE.ROLE_TYPE }, Keys.KEY_ROLE_TYPE_PRIMARY, new TableField[] { RoleType.ROLE_TYPE.TYPE_ID }, true);
    public static final ForeignKey<EmployeeRecord, WorkingTypeRecord> FKT1X6RUBIH99KWGV4VY4HK32XT = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("FKt1x6rubih99kwgv4vy4hk32xt"), new TableField[] { Employee.EMPLOYEE.WORKING_TYPE_ID }, Keys.KEY_WORKING_TYPE_PRIMARY, new TableField[] { WorkingType.WORKING_TYPE.TYPE_ID }, true);
    public static final ForeignKey<EmployeeAllowanceRecord, EmployeeRecord> FK293UXH1JV018U13M3F2JUWFEA = Internal.createForeignKey(EmployeeAllowance.EMPLOYEE_ALLOWANCE, DSL.name("FK293uxh1jv018u13m3f2juwfea"), new TableField[] { EmployeeAllowance.EMPLOYEE_ALLOWANCE.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<EmployeeAllowanceRecord, PolicyNameRecord> FKOSQIBKMQX7OCSYRBSEHVNY87M = Internal.createForeignKey(EmployeeAllowance.EMPLOYEE_ALLOWANCE, DSL.name("FKosqibkmqx7ocsyrbsehvny87m"), new TableField[] { EmployeeAllowance.EMPLOYEE_ALLOWANCE.POLICY_NAME_ID }, Keys.KEY_POLICY_NAME_PRIMARY, new TableField[] { PolicyName.POLICY_NAME.POLICY_NAME_ID }, true);
    public static final ForeignKey<EmployeeAssetRecord, CategoryCompanyAssetRecord> FK78IRLSPQO8T1YNQKT77N52FFM = Internal.createForeignKey(EmployeeAsset.EMPLOYEE_ASSET, DSL.name("FK78irlspqo8t1ynqkt77n52ffm"), new TableField[] { EmployeeAsset.EMPLOYEE_ASSET.CATEGORY_ASSET_ID }, Keys.KEY_CATEGORY_COMPANY_ASSET_PRIMARY, new TableField[] { CategoryCompanyAsset.CATEGORY_COMPANY_ASSET.COMPANY_ASSET_ID }, true);
    public static final ForeignKey<EmployeeInsuranceRecord, PolicyNameRecord> FK5CS8ONP5MANPP87EX4F6ORT8H = Internal.createForeignKey(EmployeeInsurance.EMPLOYEE_INSURANCE, DSL.name("FK5cs8onp5manpp87ex4f6ort8h"), new TableField[] { EmployeeInsurance.EMPLOYEE_INSURANCE.POLICY_NAME_ID }, Keys.KEY_POLICY_NAME_PRIMARY, new TableField[] { PolicyName.POLICY_NAME.POLICY_NAME_ID }, true);
    public static final ForeignKey<EmployeeInsuranceRecord, EmployeeRecord> FKK66MTPNQ5R18DF3YGJ9PA0Y6H = Internal.createForeignKey(EmployeeInsurance.EMPLOYEE_INSURANCE, DSL.name("FKk66mtpnq5r18df3ygj9pa0y6h"), new TableField[] { EmployeeInsurance.EMPLOYEE_INSURANCE.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<EmployeeTaxRecord, PolicyNameRecord> FK2UTMA0MC7ESJTTOJM8M7UF661 = Internal.createForeignKey(EmployeeTax.EMPLOYEE_TAX, DSL.name("FK2utma0mc7esjttojm8m7uf661"), new TableField[] { EmployeeTax.EMPLOYEE_TAX.POLICY_NAME_ID }, Keys.KEY_POLICY_NAME_PRIMARY, new TableField[] { PolicyName.POLICY_NAME.POLICY_NAME_ID }, true);
    public static final ForeignKey<EmployeeTaxRecord, EmployeeRecord> FKBCD7K6KN5O009WPKQPIIKGR7Y = Internal.createForeignKey(EmployeeTax.EMPLOYEE_TAX, DSL.name("FKbcd7k6kn5o009wpkqpiikgr7y"), new TableField[] { EmployeeTax.EMPLOYEE_TAX.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<GradeTypeRecord, JobRecord> FKOQCA98T9L3HWPI1LPMRINK6G3 = Internal.createForeignKey(GradeType.GRADE_TYPE, DSL.name("FKoqca98t9l3hwpi1lpmrink6g3"), new TableField[] { GradeType.GRADE_TYPE.JOB_ID }, Keys.KEY_JOB_PRIMARY, new TableField[] { Job.JOB.JOB_ID }, true);
    public static final ForeignKey<LeaveCompanyRecord, WorkingContractRecord> FK4GYNGEYXJYDSIQVFJFTOWYJ03 = Internal.createForeignKey(LeaveCompany.LEAVE_COMPANY, DSL.name("FK4gyngeyxjydsiqvfjftowyj03"), new TableField[] { LeaveCompany.LEAVE_COMPANY.WORKING_CONTRACT_ID }, Keys.KEY_WORKING_CONTRACT_PRIMARY, new TableField[] { WorkingContract.WORKING_CONTRACT.WORKING_CONTRACT_ID }, true);
    public static final ForeignKey<LeaveCompanyRecord, LeaveCompanyReasonRecord> FK7U2KI7ITXU8X6O44CGS9GPARH = Internal.createForeignKey(LeaveCompany.LEAVE_COMPANY, DSL.name("FK7u2ki7itxu8x6o44cgs9gparh"), new TableField[] { LeaveCompany.LEAVE_COMPANY.LEAVE_COMPANY_REASON_ID }, Keys.KEY_LEAVE_COMPANY_REASON_PRIMARY, new TableField[] { LeaveCompanyReason.LEAVE_COMPANY_REASON.REASON_ID }, true);
    public static final ForeignKey<ListTimekeepingStatusRecord, TimekeepingStatusRecord> FK20NYINYI7FSQSIGCKGPHF26NN = Internal.createForeignKey(ListTimekeepingStatus.LIST_TIMEKEEPING_STATUS, DSL.name("FK20nyinyi7fsqsigckgphf26nn"), new TableField[] { ListTimekeepingStatus.LIST_TIMEKEEPING_STATUS.TIMEKEEPING_STATUS_ID }, Keys.KEY_TIMEKEEPING_STATUS_PRIMARY, new TableField[] { TimekeepingStatus.TIMEKEEPING_STATUS.TYPE_ID }, true);
    public static final ForeignKey<ListTimekeepingStatusRecord, TimekeepingRecord> FKOP0N0YQGC8C6ETRKVU2JG4BEQ = Internal.createForeignKey(ListTimekeepingStatus.LIST_TIMEKEEPING_STATUS, DSL.name("FKop0n0yqgc8c6etrkvu2jg4beq"), new TableField[] { ListTimekeepingStatus.LIST_TIMEKEEPING_STATUS.TIMEKEEPING_ID }, Keys.KEY_TIMEKEEPING_PRIMARY, new TableField[] { Timekeeping.TIMEKEEPING.TIMEKEEPING_ID }, true);
    public static final ForeignKey<OvertimeRecord, TimekeepingRecord> FKAASBKWOHKW74LJY7T58MJ8VCA = Internal.createForeignKey(Overtime.OVERTIME, DSL.name("FKaasbkwohkw74ljy7t58mj8vca"), new TableField[] { Overtime.OVERTIME.TIMEKEEPING_ID }, Keys.KEY_TIMEKEEPING_PRIMARY, new TableField[] { Timekeeping.TIMEKEEPING.TIMEKEEPING_ID }, true);
    public static final ForeignKey<OvertimeRecord, OvertimeTypeRecord> FKQL0MY2O5RBWGF9POH5HHQDVD2 = Internal.createForeignKey(Overtime.OVERTIME, DSL.name("FKql0my2o5rbwgf9poh5hhqdvd2"), new TableField[] { Overtime.OVERTIME.OVERTIME_TYPE_ID }, Keys.KEY_OVERTIME_TYPE_PRIMARY, new TableField[] { OvertimeType.OVERTIME_TYPE.OVERTIME_TYPE_ID }, true);
    public static final ForeignKey<PaidLeaveRecord, TimekeepingRecord> FKQF29PRRWVI8CG9SDKWP0MLC58 = Internal.createForeignKey(PaidLeave.PAID_LEAVE, DSL.name("FKqf29prrwvi8cg9sdkwp0mlc58"), new TableField[] { PaidLeave.PAID_LEAVE.TIMEKEEPING_ID }, Keys.KEY_TIMEKEEPING_PRIMARY, new TableField[] { Timekeeping.TIMEKEEPING.TIMEKEEPING_ID }, true);
    public static final ForeignKey<PaidLeaveRecord, PaidLeaveReasonRecord> FKR9JCCLAJA8I6D8HOF88W3GNPW = Internal.createForeignKey(PaidLeave.PAID_LEAVE, DSL.name("FKr9jcclaja8i6d8hof88w3gnpw"), new TableField[] { PaidLeave.PAID_LEAVE.PAID_LEAVE_REASON_ID }, Keys.KEY_PAID_LEAVE_REASON_PRIMARY, new TableField[] { PaidLeaveReason.PAID_LEAVE_REASON.REASON_ID }, true);
    public static final ForeignKey<PolicyRecord, PolicyTypeRecord> FKO1XJITAH0I8U19U5380O7382W = Internal.createForeignKey(Policy.POLICY, DSL.name("FKo1xjitah0i8u19u5380o7382w"), new TableField[] { Policy.POLICY.POLICY_TYPE_ID }, Keys.KEY_POLICY_TYPE_PRIMARY, new TableField[] { PolicyType.POLICY_TYPE.POLICY_TYPE_ID }, true);
    public static final ForeignKey<PolicyNameRecord, PolicyTypeRecord> FK7NMLSQ2HYE4CML0867QKLYBNT = Internal.createForeignKey(PolicyName.POLICY_NAME, DSL.name("FK7nmlsq2hye4cml0867qklybnt"), new TableField[] { PolicyName.POLICY_NAME.POLICY_TYPE_ID }, Keys.KEY_POLICY_TYPE_PRIMARY, new TableField[] { PolicyType.POLICY_TYPE.POLICY_TYPE_ID }, true);
    public static final ForeignKey<PolicyTypeRecord, PolicyCategoryRecord> FKM3NA80O96I7KXD7UII2TVWWS7 = Internal.createForeignKey(PolicyType.POLICY_TYPE, DSL.name("FKm3na80o96i7kxd7uii2tvwws7"), new TableField[] { PolicyType.POLICY_TYPE.POLICY_CATEGORY_ID }, Keys.KEY_POLICY_CATEGORY_PRIMARY, new TableField[] { PolicyCategory.POLICY_CATEGORY.POLICY_CATEGORY_ID }, true);
    public static final ForeignKey<RelativeInformationRecord, RelativeTypeRecord> FKFYPQKGJRT16ET5DQ5JUFNM6SM = Internal.createForeignKey(RelativeInformation.RELATIVE_INFORMATION, DSL.name("FKfypqkgjrt16et5dq5jufnm6sm"), new TableField[] { RelativeInformation.RELATIVE_INFORMATION.RELATIVE_TYPE }, Keys.KEY_RELATIVE_TYPE_PRIMARY, new TableField[] { RelativeType.RELATIVE_TYPE.TYPE_ID }, true);
    public static final ForeignKey<RelativeInformationRecord, EmployeeRecord> FKMWKD588KL8GL2RFVI52GXUT3 = Internal.createForeignKey(RelativeInformation.RELATIVE_INFORMATION, DSL.name("FKmwkd588kl8gl2rfvi52gxut3"), new TableField[] { RelativeInformation.RELATIVE_INFORMATION.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<RequestNameRecord, RequestTypeRecord> FK3LNQ8B1L5IXAJNJ9DJI7X4UGV = Internal.createForeignKey(RequestName.REQUEST_NAME, DSL.name("FK3lnq8b1l5ixajnj9dji7x4ugv"), new TableField[] { RequestName.REQUEST_NAME.REQUEST_TYPE_ID }, Keys.KEY_REQUEST_TYPE_PRIMARY, new TableField[] { RequestType.REQUEST_TYPE.TYPE_ID }, true);
    public static final ForeignKey<RequestNameRecord, PolicyRecord> FKMBYRA74WITRNKLXG1Y88DCDFH = Internal.createForeignKey(RequestName.REQUEST_NAME, DSL.name("FKmbyra74witrnklxg1y88dcdfh"), new TableField[] { RequestName.REQUEST_NAME.POLICY_ID }, Keys.KEY_POLICY_PRIMARY, new TableField[] { Policy.POLICY.POLICY_ID }, true);
    public static final ForeignKey<ReviewRequestRecord, ApplicationsRequestRecord> FKNB2KXUNSVLPR5QDCHQSJN3SGH = Internal.createForeignKey(ReviewRequest.REVIEW_REQUEST, DSL.name("FKnb2kxunsvlpr5qdchqsjn3sgh"), new TableField[] { ReviewRequest.REVIEW_REQUEST.APPLICATIONS_REQUEST_ID }, Keys.KEY_APPLICATIONS_REQUEST_PRIMARY, new TableField[] { ApplicationsRequest.APPLICATIONS_REQUEST.APPLICATION_REQUEST_ID }, true);
    public static final ForeignKey<ReviewSalaryRecord, SalaryMonthlyRecord> FKTEDYOHKMCUADRVNTUH8GUUY25 = Internal.createForeignKey(ReviewSalary.REVIEW_SALARY, DSL.name("FKtedyohkmcuadrvntuh8guuy25"), new TableField[] { ReviewSalary.REVIEW_SALARY.SALARY_ID }, Keys.KEY_SALARY_MONTHLY_PRIMARY, new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_ID }, true);
    public static final ForeignKey<SalaryContractRecord, WorkingContractRecord> FKGLRNNRQ4EI66HMXLAUPIJ0KNH = Internal.createForeignKey(SalaryContract.SALARY_CONTRACT, DSL.name("FKglrnnrq4ei66hmxlaupij0knh"), new TableField[] { SalaryContract.SALARY_CONTRACT.WORKING_CONTRACT_ID }, Keys.KEY_WORKING_CONTRACT_PRIMARY, new TableField[] { WorkingContract.WORKING_CONTRACT.WORKING_CONTRACT_ID }, true);
    public static final ForeignKey<SalaryMonthlyRecord, SalaryStatusRecord> FKJOHK0L98NYFOT4UYSMV3GQBK8 = Internal.createForeignKey(SalaryMonthly.SALARY_MONTHLY, DSL.name("FKjohk0l98nyfot4uysmv3gqbk8"), new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_STATUS_ID }, Keys.KEY_SALARY_STATUS_PRIMARY, new TableField[] { SalaryStatus.SALARY_STATUS.STATUS_ID }, true);
    public static final ForeignKey<SalaryMonthlyRecord, SalaryContractRecord> FKSID0Y6G0SPTJ4B1S4YE7HQNT7 = Internal.createForeignKey(SalaryMonthly.SALARY_MONTHLY, DSL.name("FKsid0y6g0sptj4b1s4ye7hqnt7"), new TableField[] { SalaryMonthly.SALARY_MONTHLY.SALARY_CONTRACT_ID }, Keys.KEY_SALARY_CONTRACT_PRIMARY, new TableField[] { SalaryContract.SALARY_CONTRACT.SALARY_CONTRACT_ID }, true);
    public static final ForeignKey<TimekeepingRecord, EmployeeRecord> FKO4RRBGBYXSY5828KF771VM621 = Internal.createForeignKey(Timekeeping.TIMEKEEPING, DSL.name("FKo4rrbgbyxsy5828kf771vm621"), new TableField[] { Timekeeping.TIMEKEEPING.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<WorkingContractRecord, ContractTypeRecord> FKDDCXT6JPBR7GU3PDK4NGS2H5V = Internal.createForeignKey(WorkingContract.WORKING_CONTRACT, DSL.name("FKddcxt6jpbr7gu3pdk4ngs2h5v"), new TableField[] { WorkingContract.WORKING_CONTRACT.CONTRACT_TYPE_ID }, Keys.KEY_CONTRACT_TYPE_PRIMARY, new TableField[] { ContractType.CONTRACT_TYPE.TYPE_ID }, true);
    public static final ForeignKey<WorkingContractRecord, EmployeeRecord> FKSEX4WS8S50GFAMJ8LGMWEQGWR = Internal.createForeignKey(WorkingContract.WORKING_CONTRACT, DSL.name("FKsex4ws8s50gfamj8lgmweqgwr"), new TableField[] { WorkingContract.WORKING_CONTRACT.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<WorkingHistoryRecord, ContractTypeRecord> FK6QAYSC7F06G54A5XUYD150B6V = Internal.createForeignKey(WorkingHistory.WORKING_HISTORY, DSL.name("FK6qaysc7f06g54a5xuyd150b6v"), new TableField[] { WorkingHistory.WORKING_HISTORY.TYPE_ID }, Keys.KEY_CONTRACT_TYPE_PRIMARY, new TableField[] { ContractType.CONTRACT_TYPE.TYPE_ID }, true);
    public static final ForeignKey<WorkingHistoryRecord, EmployeeRecord> FKIFVK8C7ONM47VH7RBDM6R7KUN = Internal.createForeignKey(WorkingHistory.WORKING_HISTORY, DSL.name("FKifvk8c7onm47vh7rbdm6r7kun"), new TableField[] { WorkingHistory.WORKING_HISTORY.EMPLOYEE_ID }, Keys.KEY_EMPLOYEE_PRIMARY, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final ForeignKey<WorkingPlaceRecord, OfficeRecord> FK6H05FAWO00DAPM4D8T2FS4CA3 = Internal.createForeignKey(WorkingPlace.WORKING_PLACE, DSL.name("FK6h05fawo00dapm4d8t2fs4ca3"), new TableField[] { WorkingPlace.WORKING_PLACE.OFFICE_ID }, Keys.KEY_OFFICE_PRIMARY, new TableField[] { Office.OFFICE.OFFICE_ID }, true);
    public static final ForeignKey<WorkingPlaceRecord, JobRecord> FKJI3M1JNM02YMVMHV5GT72AKD2 = Internal.createForeignKey(WorkingPlace.WORKING_PLACE, DSL.name("FKji3m1jnm02ymvmhv5gt72akd2"), new TableField[] { WorkingPlace.WORKING_PLACE.JOB_ID }, Keys.KEY_JOB_PRIMARY, new TableField[] { Job.JOB.JOB_ID }, true);
    public static final ForeignKey<WorkingPlaceRecord, AreaRecord> FKL7P5DF5V5OGY5T8KCMXTT10XN = Internal.createForeignKey(WorkingPlace.WORKING_PLACE, DSL.name("FKl7p5df5v5ogy5t8kcmxtt10xn"), new TableField[] { WorkingPlace.WORKING_PLACE.AREA_ID }, Keys.KEY_AREA_PRIMARY, new TableField[] { Area.AREA.AREA_ID }, true);
    public static final ForeignKey<WorkingPlaceRecord, WorkingContractRecord> FKMSDABPYR5VHT6G61NOPMUD2D2 = Internal.createForeignKey(WorkingPlace.WORKING_PLACE, DSL.name("FKmsdabpyr5vht6g61nopmud2d2"), new TableField[] { WorkingPlace.WORKING_PLACE.WORKING_CONTRACT_ID }, Keys.KEY_WORKING_CONTRACT_PRIMARY, new TableField[] { WorkingContract.WORKING_CONTRACT.WORKING_CONTRACT_ID }, true);
    public static final ForeignKey<WorkingPlaceRecord, GradeTypeRecord> FKS257VARMVXKJS0VECV56AGSME = Internal.createForeignKey(WorkingPlace.WORKING_PLACE, DSL.name("FKs257varmvxkjs0vecv56agsme"), new TableField[] { WorkingPlace.WORKING_PLACE.GRADE_ID }, Keys.KEY_GRADE_TYPE_PRIMARY, new TableField[] { GradeType.GRADE_TYPE.GRADE_ID }, true);
}
