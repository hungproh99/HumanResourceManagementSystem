/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.codegen.maven.example.tables.LeaveCompany;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaveCompanyRecord extends UpdatableRecordImpl<LeaveCompanyRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.leave_company.id</code>.
     */
    public LeaveCompanyRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.leave_company.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>human_resource_management.leave_company.leave_company_reason_id</code>.
     */
    public LeaveCompanyRecord setLeaveCompanyReasonId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.leave_company.leave_company_reason_id</code>.
     */
    public Long getLeaveCompanyReasonId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>human_resource_management.leave_company.working_contract_id</code>.
     */
    public LeaveCompanyRecord setWorkingContractId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.leave_company.working_contract_id</code>.
     */
    public Long getWorkingContractId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LeaveCompany.LEAVE_COMPANY.ID;
    }

    @Override
    public Field<Long> field2() {
        return LeaveCompany.LEAVE_COMPANY.LEAVE_COMPANY_REASON_ID;
    }

    @Override
    public Field<Long> field3() {
        return LeaveCompany.LEAVE_COMPANY.WORKING_CONTRACT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLeaveCompanyReasonId();
    }

    @Override
    public Long component3() {
        return getWorkingContractId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLeaveCompanyReasonId();
    }

    @Override
    public Long value3() {
        return getWorkingContractId();
    }

    @Override
    public LeaveCompanyRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LeaveCompanyRecord value2(Long value) {
        setLeaveCompanyReasonId(value);
        return this;
    }

    @Override
    public LeaveCompanyRecord value3(Long value) {
        setWorkingContractId(value);
        return this;
    }

    @Override
    public LeaveCompanyRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LeaveCompanyRecord
     */
    public LeaveCompanyRecord() {
        super(LeaveCompany.LEAVE_COMPANY);
    }

    /**
     * Create a detached, initialised LeaveCompanyRecord
     */
    public LeaveCompanyRecord(Long id, Long leaveCompanyReasonId, Long workingContractId) {
        super(LeaveCompany.LEAVE_COMPANY);

        setId(id);
        setLeaveCompanyReasonId(leaveCompanyReasonId);
        setWorkingContractId(workingContractId);
    }

    /**
     * Create a detached, initialised LeaveCompanyRecord
     */
    public LeaveCompanyRecord(org.jooq.codegen.maven.example.tables.pojos.LeaveCompany value) {
        super(LeaveCompany.LEAVE_COMPANY);

        if (value != null) {
            setId(value.getId());
            setLeaveCompanyReasonId(value.getLeaveCompanyReasonId());
            setWorkingContractId(value.getWorkingContractId());
        }
    }
}
