/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.pojos;


import java.io.Serializable;
import java.time.LocalTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Overtime implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long      overtimeId;
    private LocalTime endTime;
    private LocalTime startTime;
    private Long      overtimeTypeId;
    private Long      timekeepingId;

    public Overtime() {}

    public Overtime(Overtime value) {
        this.overtimeId = value.overtimeId;
        this.endTime = value.endTime;
        this.startTime = value.startTime;
        this.overtimeTypeId = value.overtimeTypeId;
        this.timekeepingId = value.timekeepingId;
    }

    public Overtime(
        Long      overtimeId,
        LocalTime endTime,
        LocalTime startTime,
        Long      overtimeTypeId,
        Long      timekeepingId
    ) {
        this.overtimeId = overtimeId;
        this.endTime = endTime;
        this.startTime = startTime;
        this.overtimeTypeId = overtimeTypeId;
        this.timekeepingId = timekeepingId;
    }

    /**
     * Getter for <code>human_resource_management.overtime.overtime_id</code>.
     */
    public Long getOvertimeId() {
        return this.overtimeId;
    }

    /**
     * Setter for <code>human_resource_management.overtime.overtime_id</code>.
     */
    public Overtime setOvertimeId(Long overtimeId) {
        this.overtimeId = overtimeId;
        return this;
    }

    /**
     * Getter for <code>human_resource_management.overtime.end_time</code>.
     */
    public LocalTime getEndTime() {
        return this.endTime;
    }

    /**
     * Setter for <code>human_resource_management.overtime.end_time</code>.
     */
    public Overtime setEndTime(LocalTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Getter for <code>human_resource_management.overtime.start_time</code>.
     */
    public LocalTime getStartTime() {
        return this.startTime;
    }

    /**
     * Setter for <code>human_resource_management.overtime.start_time</code>.
     */
    public Overtime setStartTime(LocalTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.overtime.overtime_type_id</code>.
     */
    public Long getOvertimeTypeId() {
        return this.overtimeTypeId;
    }

    /**
     * Setter for
     * <code>human_resource_management.overtime.overtime_type_id</code>.
     */
    public Overtime setOvertimeTypeId(Long overtimeTypeId) {
        this.overtimeTypeId = overtimeTypeId;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.overtime.timekeeping_id</code>.
     */
    public Long getTimekeepingId() {
        return this.timekeepingId;
    }

    /**
     * Setter for
     * <code>human_resource_management.overtime.timekeeping_id</code>.
     */
    public Overtime setTimekeepingId(Long timekeepingId) {
        this.timekeepingId = timekeepingId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Overtime other = (Overtime) obj;
        if (this.overtimeId == null) {
            if (other.overtimeId != null)
                return false;
        }
        else if (!this.overtimeId.equals(other.overtimeId))
            return false;
        if (this.endTime == null) {
            if (other.endTime != null)
                return false;
        }
        else if (!this.endTime.equals(other.endTime))
            return false;
        if (this.startTime == null) {
            if (other.startTime != null)
                return false;
        }
        else if (!this.startTime.equals(other.startTime))
            return false;
        if (this.overtimeTypeId == null) {
            if (other.overtimeTypeId != null)
                return false;
        }
        else if (!this.overtimeTypeId.equals(other.overtimeTypeId))
            return false;
        if (this.timekeepingId == null) {
            if (other.timekeepingId != null)
                return false;
        }
        else if (!this.timekeepingId.equals(other.timekeepingId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.overtimeId == null) ? 0 : this.overtimeId.hashCode());
        result = prime * result + ((this.endTime == null) ? 0 : this.endTime.hashCode());
        result = prime * result + ((this.startTime == null) ? 0 : this.startTime.hashCode());
        result = prime * result + ((this.overtimeTypeId == null) ? 0 : this.overtimeTypeId.hashCode());
        result = prime * result + ((this.timekeepingId == null) ? 0 : this.timekeepingId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Overtime (");

        sb.append(overtimeId);
        sb.append(", ").append(endTime);
        sb.append(", ").append(startTime);
        sb.append(", ").append(overtimeTypeId);
        sb.append(", ").append(timekeepingId);

        sb.append(")");
        return sb.toString();
    }
}
