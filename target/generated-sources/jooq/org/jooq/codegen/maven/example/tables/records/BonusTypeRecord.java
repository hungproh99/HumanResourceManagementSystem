/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.codegen.maven.example.tables.BonusType;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BonusTypeRecord extends UpdatableRecordImpl<BonusTypeRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>human_resource_management.bonus_type.bonus_type_id</code>.
     */
    public BonusTypeRecord setBonusTypeId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.bonus_type.bonus_type_id</code>.
     */
    public Long getBonusTypeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>human_resource_management.bonus_type.bonus_type</code>.
     */
    public BonusTypeRecord setBonusType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.bonus_type.bonus_type</code>.
     */
    public String getBonusType() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BonusType.BONUS_TYPE.BONUS_TYPE_ID;
    }

    @Override
    public Field<String> field2() {
        return BonusType.BONUS_TYPE.BONUS_TYPE_;
    }

    @Override
    public Long component1() {
        return getBonusTypeId();
    }

    @Override
    public String component2() {
        return getBonusType();
    }

    @Override
    public Long value1() {
        return getBonusTypeId();
    }

    @Override
    public String value2() {
        return getBonusType();
    }

    @Override
    public BonusTypeRecord value1(Long value) {
        setBonusTypeId(value);
        return this;
    }

    @Override
    public BonusTypeRecord value2(String value) {
        setBonusType(value);
        return this;
    }

    @Override
    public BonusTypeRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BonusTypeRecord
     */
    public BonusTypeRecord() {
        super(BonusType.BONUS_TYPE);
    }

    /**
     * Create a detached, initialised BonusTypeRecord
     */
    public BonusTypeRecord(Long bonusTypeId, String bonusType) {
        super(BonusType.BONUS_TYPE);

        setBonusTypeId(bonusTypeId);
        setBonusType(bonusType);
    }

    /**
     * Create a detached, initialised BonusTypeRecord
     */
    public BonusTypeRecord(org.jooq.codegen.maven.example.tables.pojos.BonusType value) {
        super(BonusType.BONUS_TYPE);

        if (value != null) {
            setBonusTypeId(value.getBonusTypeId());
            setBonusType(value.getBonusType());
        }
    }
}
