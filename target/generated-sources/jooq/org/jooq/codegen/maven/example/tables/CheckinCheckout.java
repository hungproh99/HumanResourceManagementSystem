/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.CheckinCheckoutRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckinCheckout extends TableImpl<CheckinCheckoutRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.checkin_checkout</code>
     */
    public static final CheckinCheckout CHECKIN_CHECKOUT = new CheckinCheckout();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CheckinCheckoutRecord> getRecordType() {
        return CheckinCheckoutRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.checkin_checkout.checkin_checkout_id</code>.
     */
    public final TableField<CheckinCheckoutRecord, Long> CHECKIN_CHECKOUT_ID = createField(DSL.name("checkin_checkout_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.checkin_checkout.checkin</code>.
     */
    public final TableField<CheckinCheckoutRecord, LocalTime> CHECKIN = createField(DSL.name("checkin"), SQLDataType.LOCALTIME, this, "");

    /**
     * The column
     * <code>human_resource_management.checkin_checkout.checkout</code>.
     */
    public final TableField<CheckinCheckoutRecord, LocalTime> CHECKOUT = createField(DSL.name("checkout"), SQLDataType.LOCALTIME, this, "");

    /**
     * The column
     * <code>human_resource_management.checkin_checkout.timekeeping_id</code>.
     */
    public final TableField<CheckinCheckoutRecord, Long> TIMEKEEPING_ID = createField(DSL.name("timekeeping_id"), SQLDataType.BIGINT, this, "");

    private CheckinCheckout(Name alias, Table<CheckinCheckoutRecord> aliased) {
        this(alias, aliased, null);
    }

    private CheckinCheckout(Name alias, Table<CheckinCheckoutRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.checkin_checkout</code>
     * table reference
     */
    public CheckinCheckout(String alias) {
        this(DSL.name(alias), CHECKIN_CHECKOUT);
    }

    /**
     * Create an aliased <code>human_resource_management.checkin_checkout</code>
     * table reference
     */
    public CheckinCheckout(Name alias) {
        this(alias, CHECKIN_CHECKOUT);
    }

    /**
     * Create a <code>human_resource_management.checkin_checkout</code> table
     * reference
     */
    public CheckinCheckout() {
        this(DSL.name("checkin_checkout"), null);
    }

    public <O extends Record> CheckinCheckout(Table<O> child, ForeignKey<O, CheckinCheckoutRecord> key) {
        super(child, key, CHECKIN_CHECKOUT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<CheckinCheckoutRecord, Long> getIdentity() {
        return (Identity<CheckinCheckoutRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CheckinCheckoutRecord> getPrimaryKey() {
        return Keys.KEY_CHECKIN_CHECKOUT_PRIMARY;
    }

    @Override
    public List<ForeignKey<CheckinCheckoutRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK7UU75DAK6H9644DB7XQNOTV30);
    }

    private transient Timekeeping _timekeeping;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.timekeeping</code> table.
     */
    public Timekeeping timekeeping() {
        if (_timekeeping == null)
            _timekeeping = new Timekeeping(this, Keys.FK7UU75DAK6H9644DB7XQNOTV30);

        return _timekeeping;
    }

    @Override
    public CheckinCheckout as(String alias) {
        return new CheckinCheckout(DSL.name(alias), this);
    }

    @Override
    public CheckinCheckout as(Name alias) {
        return new CheckinCheckout(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CheckinCheckout rename(String name) {
        return new CheckinCheckout(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CheckinCheckout rename(Name name) {
        return new CheckinCheckout(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalTime, LocalTime, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
