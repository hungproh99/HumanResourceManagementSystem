/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.codegen.maven.example.tables.RoleType;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleTypeRecord extends UpdatableRecordImpl<RoleTypeRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.role_type.type_id</code>.
     */
    public RoleTypeRecord setTypeId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.role_type.type_id</code>.
     */
    public Long getTypeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>human_resource_management.role_type.role</code>.
     */
    public RoleTypeRecord setRole(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.role_type.role</code>.
     */
    public String getRole() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RoleType.ROLE_TYPE.TYPE_ID;
    }

    @Override
    public Field<String> field2() {
        return RoleType.ROLE_TYPE.ROLE;
    }

    @Override
    public Long component1() {
        return getTypeId();
    }

    @Override
    public String component2() {
        return getRole();
    }

    @Override
    public Long value1() {
        return getTypeId();
    }

    @Override
    public String value2() {
        return getRole();
    }

    @Override
    public RoleTypeRecord value1(Long value) {
        setTypeId(value);
        return this;
    }

    @Override
    public RoleTypeRecord value2(String value) {
        setRole(value);
        return this;
    }

    @Override
    public RoleTypeRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleTypeRecord
     */
    public RoleTypeRecord() {
        super(RoleType.ROLE_TYPE);
    }

    /**
     * Create a detached, initialised RoleTypeRecord
     */
    public RoleTypeRecord(Long typeId, String role) {
        super(RoleType.ROLE_TYPE);

        setTypeId(typeId);
        setRole(role);
    }

    /**
     * Create a detached, initialised RoleTypeRecord
     */
    public RoleTypeRecord(org.jooq.codegen.maven.example.tables.pojos.RoleType value) {
        super(RoleType.ROLE_TYPE);

        if (value != null) {
            setTypeId(value.getTypeId());
            setRole(value.getRole());
        }
    }
}
