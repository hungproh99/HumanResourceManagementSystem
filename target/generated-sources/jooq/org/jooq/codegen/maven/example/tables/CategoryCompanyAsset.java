/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.CategoryCompanyAssetRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryCompanyAsset extends TableImpl<CategoryCompanyAssetRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.category_company_asset</code>
     */
    public static final CategoryCompanyAsset CATEGORY_COMPANY_ASSET = new CategoryCompanyAsset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CategoryCompanyAssetRecord> getRecordType() {
        return CategoryCompanyAssetRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.category_company_asset.company_asset_id</code>.
     */
    public final TableField<CategoryCompanyAssetRecord, Long> COMPANY_ASSET_ID = createField(DSL.name("company_asset_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.category_company_asset.asset_name</code>.
     */
    public final TableField<CategoryCompanyAssetRecord, String> ASSET_NAME = createField(DSL.name("asset_name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.category_company_asset.quantity</code>.
     */
    public final TableField<CategoryCompanyAssetRecord, Integer> QUANTITY = createField(DSL.name("quantity"), SQLDataType.INTEGER, this, "");

    private CategoryCompanyAsset(Name alias, Table<CategoryCompanyAssetRecord> aliased) {
        this(alias, aliased, null);
    }

    private CategoryCompanyAsset(Name alias, Table<CategoryCompanyAssetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>human_resource_management.category_company_asset</code> table
     * reference
     */
    public CategoryCompanyAsset(String alias) {
        this(DSL.name(alias), CATEGORY_COMPANY_ASSET);
    }

    /**
     * Create an aliased
     * <code>human_resource_management.category_company_asset</code> table
     * reference
     */
    public CategoryCompanyAsset(Name alias) {
        this(alias, CATEGORY_COMPANY_ASSET);
    }

    /**
     * Create a <code>human_resource_management.category_company_asset</code>
     * table reference
     */
    public CategoryCompanyAsset() {
        this(DSL.name("category_company_asset"), null);
    }

    public <O extends Record> CategoryCompanyAsset(Table<O> child, ForeignKey<O, CategoryCompanyAssetRecord> key) {
        super(child, key, CATEGORY_COMPANY_ASSET);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<CategoryCompanyAssetRecord, Long> getIdentity() {
        return (Identity<CategoryCompanyAssetRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CategoryCompanyAssetRecord> getPrimaryKey() {
        return Keys.KEY_CATEGORY_COMPANY_ASSET_PRIMARY;
    }

    @Override
    public CategoryCompanyAsset as(String alias) {
        return new CategoryCompanyAsset(DSL.name(alias), this);
    }

    @Override
    public CategoryCompanyAsset as(Name alias) {
        return new CategoryCompanyAsset(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CategoryCompanyAsset rename(String name) {
        return new CategoryCompanyAsset(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CategoryCompanyAsset rename(Name name) {
        return new CategoryCompanyAsset(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
