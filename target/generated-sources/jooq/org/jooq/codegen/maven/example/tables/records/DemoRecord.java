/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.codegen.maven.example.tables.Demo;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemoRecord extends UpdatableRecordImpl<DemoRecord> implements Record3<Long, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>human_resource_management.demo.id</code>.
     */
    public DemoRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.demo.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>human_resource_management.demo.date</code>.
     */
    public DemoRecord setDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.demo.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>human_resource_management.demo.demo2_id</code>.
     */
    public DemoRecord setDemo2Id(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>human_resource_management.demo.demo2_id</code>.
     */
    public Long getDemo2Id() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, LocalDate, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, LocalDate, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Demo.DEMO.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Demo.DEMO.DATE;
    }

    @Override
    public Field<Long> field3() {
        return Demo.DEMO.DEMO2_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getDate();
    }

    @Override
    public Long component3() {
        return getDemo2Id();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getDate();
    }

    @Override
    public Long value3() {
        return getDemo2Id();
    }

    @Override
    public DemoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DemoRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public DemoRecord value3(Long value) {
        setDemo2Id(value);
        return this;
    }

    @Override
    public DemoRecord values(Long value1, LocalDate value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DemoRecord
     */
    public DemoRecord() {
        super(Demo.DEMO);
    }

    /**
     * Create a detached, initialised DemoRecord
     */
    public DemoRecord(Long id, LocalDate date, Long demo2Id) {
        super(Demo.DEMO);

        setId(id);
        setDate(date);
        setDemo2Id(demo2Id);
    }

    /**
     * Create a detached, initialised DemoRecord
     */
    public DemoRecord(org.jooq.codegen.maven.example.tables.pojos.Demo value) {
        super(Demo.DEMO);

        if (value != null) {
            setId(value.getId());
            setDate(value.getDate());
            setDemo2Id(value.getDemo2Id());
        }
    }
}
