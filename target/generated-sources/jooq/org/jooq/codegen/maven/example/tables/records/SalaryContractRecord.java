/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.codegen.maven.example.tables.SalaryContract;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SalaryContractRecord extends UpdatableRecordImpl<SalaryContractRecord> implements Record6<Long, BigDecimal, BigDecimal, Boolean, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>human_resource_management.salary_contract.salary_contract_id</code>.
     */
    public SalaryContractRecord setSalaryContractId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.salary_contract.salary_contract_id</code>.
     */
    public Long getSalaryContractId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>human_resource_management.salary_contract.additional_salary</code>.
     */
    public SalaryContractRecord setAdditionalSalary(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.salary_contract.additional_salary</code>.
     */
    public BigDecimal getAdditionalSalary() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for
     * <code>human_resource_management.salary_contract.base_salary</code>.
     */
    public SalaryContractRecord setBaseSalary(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.salary_contract.base_salary</code>.
     */
    public BigDecimal getBaseSalary() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for
     * <code>human_resource_management.salary_contract.salary_contract_status</code>.
     */
    public SalaryContractRecord setSalaryContractStatus(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.salary_contract.salary_contract_status</code>.
     */
    public Boolean getSalaryContractStatus() {
        return (Boolean) get(3);
    }

    /**
     * Setter for
     * <code>human_resource_management.salary_contract.start_date</code>.
     */
    public SalaryContractRecord setStartDate(LocalDate value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.salary_contract.start_date</code>.
     */
    public LocalDate getStartDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for
     * <code>human_resource_management.salary_contract.working_contract_id</code>.
     */
    public SalaryContractRecord setWorkingContractId(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.salary_contract.working_contract_id</code>.
     */
    public Long getWorkingContractId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, BigDecimal, BigDecimal, Boolean, LocalDate, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, BigDecimal, BigDecimal, Boolean, LocalDate, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SalaryContract.SALARY_CONTRACT.SALARY_CONTRACT_ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return SalaryContract.SALARY_CONTRACT.ADDITIONAL_SALARY;
    }

    @Override
    public Field<BigDecimal> field3() {
        return SalaryContract.SALARY_CONTRACT.BASE_SALARY;
    }

    @Override
    public Field<Boolean> field4() {
        return SalaryContract.SALARY_CONTRACT.SALARY_CONTRACT_STATUS;
    }

    @Override
    public Field<LocalDate> field5() {
        return SalaryContract.SALARY_CONTRACT.START_DATE;
    }

    @Override
    public Field<Long> field6() {
        return SalaryContract.SALARY_CONTRACT.WORKING_CONTRACT_ID;
    }

    @Override
    public Long component1() {
        return getSalaryContractId();
    }

    @Override
    public BigDecimal component2() {
        return getAdditionalSalary();
    }

    @Override
    public BigDecimal component3() {
        return getBaseSalary();
    }

    @Override
    public Boolean component4() {
        return getSalaryContractStatus();
    }

    @Override
    public LocalDate component5() {
        return getStartDate();
    }

    @Override
    public Long component6() {
        return getWorkingContractId();
    }

    @Override
    public Long value1() {
        return getSalaryContractId();
    }

    @Override
    public BigDecimal value2() {
        return getAdditionalSalary();
    }

    @Override
    public BigDecimal value3() {
        return getBaseSalary();
    }

    @Override
    public Boolean value4() {
        return getSalaryContractStatus();
    }

    @Override
    public LocalDate value5() {
        return getStartDate();
    }

    @Override
    public Long value6() {
        return getWorkingContractId();
    }

    @Override
    public SalaryContractRecord value1(Long value) {
        setSalaryContractId(value);
        return this;
    }

    @Override
    public SalaryContractRecord value2(BigDecimal value) {
        setAdditionalSalary(value);
        return this;
    }

    @Override
    public SalaryContractRecord value3(BigDecimal value) {
        setBaseSalary(value);
        return this;
    }

    @Override
    public SalaryContractRecord value4(Boolean value) {
        setSalaryContractStatus(value);
        return this;
    }

    @Override
    public SalaryContractRecord value5(LocalDate value) {
        setStartDate(value);
        return this;
    }

    @Override
    public SalaryContractRecord value6(Long value) {
        setWorkingContractId(value);
        return this;
    }

    @Override
    public SalaryContractRecord values(Long value1, BigDecimal value2, BigDecimal value3, Boolean value4, LocalDate value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalaryContractRecord
     */
    public SalaryContractRecord() {
        super(SalaryContract.SALARY_CONTRACT);
    }

    /**
     * Create a detached, initialised SalaryContractRecord
     */
    public SalaryContractRecord(Long salaryContractId, BigDecimal additionalSalary, BigDecimal baseSalary, Boolean salaryContractStatus, LocalDate startDate, Long workingContractId) {
        super(SalaryContract.SALARY_CONTRACT);

        setSalaryContractId(salaryContractId);
        setAdditionalSalary(additionalSalary);
        setBaseSalary(baseSalary);
        setSalaryContractStatus(salaryContractStatus);
        setStartDate(startDate);
        setWorkingContractId(workingContractId);
    }

    /**
     * Create a detached, initialised SalaryContractRecord
     */
    public SalaryContractRecord(org.jooq.codegen.maven.example.tables.pojos.SalaryContract value) {
        super(SalaryContract.SALARY_CONTRACT);

        if (value != null) {
            setSalaryContractId(value.getSalaryContractId());
            setAdditionalSalary(value.getAdditionalSalary());
            setBaseSalary(value.getBaseSalary());
            setSalaryContractStatus(value.getSalaryContractStatus());
            setStartDate(value.getStartDate());
            setWorkingContractId(value.getWorkingContractId());
        }
    }
}
