/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.WorkingPlaceRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkingPlace extends TableImpl<WorkingPlaceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.working_place</code>
     */
    public static final WorkingPlace WORKING_PLACE = new WorkingPlace();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkingPlaceRecord> getRecordType() {
        return WorkingPlaceRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.working_place.working_place_id</code>.
     */
    public final TableField<WorkingPlaceRecord, Long> WORKING_PLACE_ID = createField(DSL.name("working_place_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>human_resource_management.working_place.area_id</code>.
     */
    public final TableField<WorkingPlaceRecord, Long> AREA_ID = createField(DSL.name("area_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>human_resource_management.working_place.job_id</code>.
     */
    public final TableField<WorkingPlaceRecord, Long> JOB_ID = createField(DSL.name("job_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.working_place.office_id</code>.
     */
    public final TableField<WorkingPlaceRecord, Long> OFFICE_ID = createField(DSL.name("office_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.working_place.working_contract_id</code>.
     */
    public final TableField<WorkingPlaceRecord, Long> WORKING_CONTRACT_ID = createField(DSL.name("working_contract_id"), SQLDataType.BIGINT, this, "");

    private WorkingPlace(Name alias, Table<WorkingPlaceRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkingPlace(Name alias, Table<WorkingPlaceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.working_place</code>
     * table reference
     */
    public WorkingPlace(String alias) {
        this(DSL.name(alias), WORKING_PLACE);
    }

    /**
     * Create an aliased <code>human_resource_management.working_place</code>
     * table reference
     */
    public WorkingPlace(Name alias) {
        this(alias, WORKING_PLACE);
    }

    /**
     * Create a <code>human_resource_management.working_place</code> table
     * reference
     */
    public WorkingPlace() {
        this(DSL.name("working_place"), null);
    }

    public <O extends Record> WorkingPlace(Table<O> child, ForeignKey<O, WorkingPlaceRecord> key) {
        super(child, key, WORKING_PLACE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<WorkingPlaceRecord, Long> getIdentity() {
        return (Identity<WorkingPlaceRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WorkingPlaceRecord> getPrimaryKey() {
        return Keys.KEY_WORKING_PLACE_PRIMARY;
    }

    @Override
    public List<ForeignKey<WorkingPlaceRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FKL7P5DF5V5OGY5T8KCMXTT10XN, Keys.FKJI3M1JNM02YMVMHV5GT72AKD2, Keys.FK6H05FAWO00DAPM4D8T2FS4CA3, Keys.FKMSDABPYR5VHT6G61NOPMUD2D2);
    }

    private transient Area _area;
    private transient Job _job;
    private transient Office _office;
    private transient WorkingContract _workingContract;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.area</code> table.
     */
    public Area area() {
        if (_area == null)
            _area = new Area(this, Keys.FKL7P5DF5V5OGY5T8KCMXTT10XN);

        return _area;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.job</code> table.
     */
    public Job job() {
        if (_job == null)
            _job = new Job(this, Keys.FKJI3M1JNM02YMVMHV5GT72AKD2);

        return _job;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.office</code> table.
     */
    public Office office() {
        if (_office == null)
            _office = new Office(this, Keys.FK6H05FAWO00DAPM4D8T2FS4CA3);

        return _office;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.working_contract</code> table.
     */
    public WorkingContract workingContract() {
        if (_workingContract == null)
            _workingContract = new WorkingContract(this, Keys.FKMSDABPYR5VHT6G61NOPMUD2D2);

        return _workingContract;
    }

    @Override
    public WorkingPlace as(String alias) {
        return new WorkingPlace(DSL.name(alias), this);
    }

    @Override
    public WorkingPlace as(Name alias) {
        return new WorkingPlace(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkingPlace rename(String name) {
        return new WorkingPlace(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkingPlace rename(Name name) {
        return new WorkingPlace(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
