/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.IdentityCardRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentityCard extends TableImpl<IdentityCardRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.identity_card</code>
     */
    public static final IdentityCard IDENTITY_CARD = new IdentityCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IdentityCardRecord> getRecordType() {
        return IdentityCardRecord.class;
    }

    /**
     * The column <code>human_resource_management.identity_card.card_id</code>.
     */
    public final TableField<IdentityCardRecord, String> CARD_ID = createField(DSL.name("card_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column
     * <code>human_resource_management.identity_card.date_of_expiry</code>.
     */
    public final TableField<IdentityCardRecord, LocalDate> DATE_OF_EXPIRY = createField(DSL.name("date_of_expiry"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column
     * <code>human_resource_management.identity_card.nationality</code>.
     */
    public final TableField<IdentityCardRecord, String> NATIONALITY = createField(DSL.name("nationality"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.identity_card.place_of_origin</code>.
     */
    public final TableField<IdentityCardRecord, String> PLACE_OF_ORIGIN = createField(DSL.name("place_of_origin"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.identity_card.place_of_residence</code>.
     */
    public final TableField<IdentityCardRecord, String> PLACE_OF_RESIDENCE = createField(DSL.name("place_of_residence"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.identity_card.provide_date</code>.
     */
    public final TableField<IdentityCardRecord, LocalDate> PROVIDE_DATE = createField(DSL.name("provide_date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column
     * <code>human_resource_management.identity_card.provide_place</code>.
     */
    public final TableField<IdentityCardRecord, String> PROVIDE_PLACE = createField(DSL.name("provide_place"), SQLDataType.VARCHAR(255), this, "");

    private IdentityCard(Name alias, Table<IdentityCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private IdentityCard(Name alias, Table<IdentityCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.identity_card</code>
     * table reference
     */
    public IdentityCard(String alias) {
        this(DSL.name(alias), IDENTITY_CARD);
    }

    /**
     * Create an aliased <code>human_resource_management.identity_card</code>
     * table reference
     */
    public IdentityCard(Name alias) {
        this(alias, IDENTITY_CARD);
    }

    /**
     * Create a <code>human_resource_management.identity_card</code> table
     * reference
     */
    public IdentityCard() {
        this(DSL.name("identity_card"), null);
    }

    public <O extends Record> IdentityCard(Table<O> child, ForeignKey<O, IdentityCardRecord> key) {
        super(child, key, IDENTITY_CARD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public UniqueKey<IdentityCardRecord> getPrimaryKey() {
        return Keys.KEY_IDENTITY_CARD_PRIMARY;
    }

    @Override
    public IdentityCard as(String alias) {
        return new IdentityCard(DSL.name(alias), this);
    }

    @Override
    public IdentityCard as(Name alias) {
        return new IdentityCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IdentityCard rename(String name) {
        return new IdentityCard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IdentityCard rename(Name name) {
        return new IdentityCard(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, LocalDate, String, String, String, LocalDate, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
