/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.ReviewRequestRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewRequest extends TableImpl<ReviewRequestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.review_request</code>
     */
    public static final ReviewRequest REVIEW_REQUEST = new ReviewRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReviewRequestRecord> getRecordType() {
        return ReviewRequestRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.review_request.review_id</code>.
     */
    public final TableField<ReviewRequestRecord, Long> REVIEW_ID = createField(DSL.name("review_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.review_request.employee_id</code>.
     */
    public final TableField<ReviewRequestRecord, String> EMPLOYEE_ID = createField(DSL.name("employee_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.review_request.applications_request_id</code>.
     */
    public final TableField<ReviewRequestRecord, Long> APPLICATIONS_REQUEST_ID = createField(DSL.name("applications_request_id"), SQLDataType.BIGINT, this, "");

    private ReviewRequest(Name alias, Table<ReviewRequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReviewRequest(Name alias, Table<ReviewRequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.review_request</code>
     * table reference
     */
    public ReviewRequest(String alias) {
        this(DSL.name(alias), REVIEW_REQUEST);
    }

    /**
     * Create an aliased <code>human_resource_management.review_request</code>
     * table reference
     */
    public ReviewRequest(Name alias) {
        this(alias, REVIEW_REQUEST);
    }

    /**
     * Create a <code>human_resource_management.review_request</code> table
     * reference
     */
    public ReviewRequest() {
        this(DSL.name("review_request"), null);
    }

    public <O extends Record> ReviewRequest(Table<O> child, ForeignKey<O, ReviewRequestRecord> key) {
        super(child, key, REVIEW_REQUEST);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<ReviewRequestRecord, Long> getIdentity() {
        return (Identity<ReviewRequestRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ReviewRequestRecord> getPrimaryKey() {
        return Keys.KEY_REVIEW_REQUEST_PRIMARY;
    }

    @Override
    public List<ForeignKey<ReviewRequestRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FKNB2KXUNSVLPR5QDCHQSJN3SGH);
    }

    private transient ApplicationsRequest _applicationsRequest;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.applications_request</code> table.
     */
    public ApplicationsRequest applicationsRequest() {
        if (_applicationsRequest == null)
            _applicationsRequest = new ApplicationsRequest(this, Keys.FKNB2KXUNSVLPR5QDCHQSJN3SGH);

        return _applicationsRequest;
    }

    @Override
    public ReviewRequest as(String alias) {
        return new ReviewRequest(DSL.name(alias), this);
    }

    @Override
    public ReviewRequest as(Name alias) {
        return new ReviewRequest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewRequest rename(String name) {
        return new ReviewRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewRequest rename(Name name) {
        return new ReviewRequest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
