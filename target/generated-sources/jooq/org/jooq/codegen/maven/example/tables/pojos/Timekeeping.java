/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Timekeeping implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long      timekeepingId;
    private LocalDate date;
    private Double    pointOtDay;
    private Double    pointWorkDay;
    private String    employeeId;

    public Timekeeping() {}

    public Timekeeping(Timekeeping value) {
        this.timekeepingId = value.timekeepingId;
        this.date = value.date;
        this.pointOtDay = value.pointOtDay;
        this.pointWorkDay = value.pointWorkDay;
        this.employeeId = value.employeeId;
    }

    public Timekeeping(
        Long      timekeepingId,
        LocalDate date,
        Double    pointOtDay,
        Double    pointWorkDay,
        String    employeeId
    ) {
        this.timekeepingId = timekeepingId;
        this.date = date;
        this.pointOtDay = pointOtDay;
        this.pointWorkDay = pointWorkDay;
        this.employeeId = employeeId;
    }

    /**
     * Getter for
     * <code>human_resource_management.timekeeping.timekeeping_id</code>.
     */
    public Long getTimekeepingId() {
        return this.timekeepingId;
    }

    /**
     * Setter for
     * <code>human_resource_management.timekeeping.timekeeping_id</code>.
     */
    public Timekeeping setTimekeepingId(Long timekeepingId) {
        this.timekeepingId = timekeepingId;
        return this;
    }

    /**
     * Getter for <code>human_resource_management.timekeeping.date</code>.
     */
    public LocalDate getDate() {
        return this.date;
    }

    /**
     * Setter for <code>human_resource_management.timekeeping.date</code>.
     */
    public Timekeeping setDate(LocalDate date) {
        this.date = date;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.timekeeping.point_ot_day</code>.
     */
    public Double getPointOtDay() {
        return this.pointOtDay;
    }

    /**
     * Setter for
     * <code>human_resource_management.timekeeping.point_ot_day</code>.
     */
    public Timekeeping setPointOtDay(Double pointOtDay) {
        this.pointOtDay = pointOtDay;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.timekeeping.point_work_day</code>.
     */
    public Double getPointWorkDay() {
        return this.pointWorkDay;
    }

    /**
     * Setter for
     * <code>human_resource_management.timekeeping.point_work_day</code>.
     */
    public Timekeeping setPointWorkDay(Double pointWorkDay) {
        this.pointWorkDay = pointWorkDay;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.timekeeping.employee_id</code>.
     */
    public String getEmployeeId() {
        return this.employeeId;
    }

    /**
     * Setter for
     * <code>human_resource_management.timekeeping.employee_id</code>.
     */
    public Timekeeping setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Timekeeping other = (Timekeeping) obj;
        if (this.timekeepingId == null) {
            if (other.timekeepingId != null)
                return false;
        }
        else if (!this.timekeepingId.equals(other.timekeepingId))
            return false;
        if (this.date == null) {
            if (other.date != null)
                return false;
        }
        else if (!this.date.equals(other.date))
            return false;
        if (this.pointOtDay == null) {
            if (other.pointOtDay != null)
                return false;
        }
        else if (!this.pointOtDay.equals(other.pointOtDay))
            return false;
        if (this.pointWorkDay == null) {
            if (other.pointWorkDay != null)
                return false;
        }
        else if (!this.pointWorkDay.equals(other.pointWorkDay))
            return false;
        if (this.employeeId == null) {
            if (other.employeeId != null)
                return false;
        }
        else if (!this.employeeId.equals(other.employeeId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.timekeepingId == null) ? 0 : this.timekeepingId.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.pointOtDay == null) ? 0 : this.pointOtDay.hashCode());
        result = prime * result + ((this.pointWorkDay == null) ? 0 : this.pointWorkDay.hashCode());
        result = prime * result + ((this.employeeId == null) ? 0 : this.employeeId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Timekeeping (");

        sb.append(timekeepingId);
        sb.append(", ").append(date);
        sb.append(", ").append(pointOtDay);
        sb.append(", ").append(pointWorkDay);
        sb.append(", ").append(employeeId);

        sb.append(")");
        return sb.toString();
    }
}
