/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeductionType implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long   deductionTypeId;
    private String deductionType;

    public DeductionType() {}

    public DeductionType(DeductionType value) {
        this.deductionTypeId = value.deductionTypeId;
        this.deductionType = value.deductionType;
    }

    public DeductionType(
        Long   deductionTypeId,
        String deductionType
    ) {
        this.deductionTypeId = deductionTypeId;
        this.deductionType = deductionType;
    }

    /**
     * Getter for
     * <code>human_resource_management.deduction_type.deduction_type_id</code>.
     */
    public Long getDeductionTypeId() {
        return this.deductionTypeId;
    }

    /**
     * Setter for
     * <code>human_resource_management.deduction_type.deduction_type_id</code>.
     */
    public DeductionType setDeductionTypeId(Long deductionTypeId) {
        this.deductionTypeId = deductionTypeId;
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.deduction_type.deduction_type</code>.
     */
    public String getDeductionType() {
        return this.deductionType;
    }

    /**
     * Setter for
     * <code>human_resource_management.deduction_type.deduction_type</code>.
     */
    public DeductionType setDeductionType(String deductionType) {
        this.deductionType = deductionType;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DeductionType other = (DeductionType) obj;
        if (this.deductionTypeId == null) {
            if (other.deductionTypeId != null)
                return false;
        }
        else if (!this.deductionTypeId.equals(other.deductionTypeId))
            return false;
        if (this.deductionType == null) {
            if (other.deductionType != null)
                return false;
        }
        else if (!this.deductionType.equals(other.deductionType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.deductionTypeId == null) ? 0 : this.deductionTypeId.hashCode());
        result = prime * result + ((this.deductionType == null) ? 0 : this.deductionType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DeductionType (");

        sb.append(deductionTypeId);
        sb.append(", ").append(deductionType);

        sb.append(")");
        return sb.toString();
    }
}
