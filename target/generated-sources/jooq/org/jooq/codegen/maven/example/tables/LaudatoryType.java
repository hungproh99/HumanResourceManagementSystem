/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.LaudatoryTypeRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LaudatoryType extends TableImpl<LaudatoryTypeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.laudatory_type</code>
     */
    public static final LaudatoryType LAUDATORY_TYPE = new LaudatoryType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LaudatoryTypeRecord> getRecordType() {
        return LaudatoryTypeRecord.class;
    }

    /**
     * The column <code>human_resource_management.laudatory_type.type_id</code>.
     */
    public final TableField<LaudatoryTypeRecord, Long> TYPE_ID = createField(DSL.name("type_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>human_resource_management.laudatory_type.name</code>.
     */
    public final TableField<LaudatoryTypeRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    private LaudatoryType(Name alias, Table<LaudatoryTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private LaudatoryType(Name alias, Table<LaudatoryTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.laudatory_type</code>
     * table reference
     */
    public LaudatoryType(String alias) {
        this(DSL.name(alias), LAUDATORY_TYPE);
    }

    /**
     * Create an aliased <code>human_resource_management.laudatory_type</code>
     * table reference
     */
    public LaudatoryType(Name alias) {
        this(alias, LAUDATORY_TYPE);
    }

    /**
     * Create a <code>human_resource_management.laudatory_type</code> table
     * reference
     */
    public LaudatoryType() {
        this(DSL.name("laudatory_type"), null);
    }

    public <O extends Record> LaudatoryType(Table<O> child, ForeignKey<O, LaudatoryTypeRecord> key) {
        super(child, key, LAUDATORY_TYPE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<LaudatoryTypeRecord, Long> getIdentity() {
        return (Identity<LaudatoryTypeRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<LaudatoryTypeRecord> getPrimaryKey() {
        return Keys.KEY_LAUDATORY_TYPE_PRIMARY;
    }

    @Override
    public LaudatoryType as(String alias) {
        return new LaudatoryType(DSL.name(alias), this);
    }

    @Override
    public LaudatoryType as(Name alias) {
        return new LaudatoryType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LaudatoryType rename(String name) {
        return new LaudatoryType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LaudatoryType rename(Name name) {
        return new LaudatoryType(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
