/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.codegen.maven.example.tables.CheckinCheckout;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckinCheckoutRecord extends UpdatableRecordImpl<CheckinCheckoutRecord> implements Record4<Long, LocalTime, LocalTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>human_resource_management.checkin_checkout.checkin_checkout_id</code>.
     */
    public CheckinCheckoutRecord setCheckinCheckoutId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.checkin_checkout.checkin_checkout_id</code>.
     */
    public Long getCheckinCheckoutId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>human_resource_management.checkin_checkout.checkin</code>.
     */
    public CheckinCheckoutRecord setCheckin(LocalTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.checkin_checkout.checkin</code>.
     */
    public LocalTime getCheckin() {
        return (LocalTime) get(1);
    }

    /**
     * Setter for
     * <code>human_resource_management.checkin_checkout.checkout</code>.
     */
    public CheckinCheckoutRecord setCheckout(LocalTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.checkin_checkout.checkout</code>.
     */
    public LocalTime getCheckout() {
        return (LocalTime) get(2);
    }

    /**
     * Setter for
     * <code>human_resource_management.checkin_checkout.timekeeping_id</code>.
     */
    public CheckinCheckoutRecord setTimekeepingId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>human_resource_management.checkin_checkout.timekeeping_id</code>.
     */
    public Long getTimekeepingId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalTime, LocalTime, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, LocalTime, LocalTime, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CheckinCheckout.CHECKIN_CHECKOUT.CHECKIN_CHECKOUT_ID;
    }

    @Override
    public Field<LocalTime> field2() {
        return CheckinCheckout.CHECKIN_CHECKOUT.CHECKIN;
    }

    @Override
    public Field<LocalTime> field3() {
        return CheckinCheckout.CHECKIN_CHECKOUT.CHECKOUT;
    }

    @Override
    public Field<Long> field4() {
        return CheckinCheckout.CHECKIN_CHECKOUT.TIMEKEEPING_ID;
    }

    @Override
    public Long component1() {
        return getCheckinCheckoutId();
    }

    @Override
    public LocalTime component2() {
        return getCheckin();
    }

    @Override
    public LocalTime component3() {
        return getCheckout();
    }

    @Override
    public Long component4() {
        return getTimekeepingId();
    }

    @Override
    public Long value1() {
        return getCheckinCheckoutId();
    }

    @Override
    public LocalTime value2() {
        return getCheckin();
    }

    @Override
    public LocalTime value3() {
        return getCheckout();
    }

    @Override
    public Long value4() {
        return getTimekeepingId();
    }

    @Override
    public CheckinCheckoutRecord value1(Long value) {
        setCheckinCheckoutId(value);
        return this;
    }

    @Override
    public CheckinCheckoutRecord value2(LocalTime value) {
        setCheckin(value);
        return this;
    }

    @Override
    public CheckinCheckoutRecord value3(LocalTime value) {
        setCheckout(value);
        return this;
    }

    @Override
    public CheckinCheckoutRecord value4(Long value) {
        setTimekeepingId(value);
        return this;
    }

    @Override
    public CheckinCheckoutRecord values(Long value1, LocalTime value2, LocalTime value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CheckinCheckoutRecord
     */
    public CheckinCheckoutRecord() {
        super(CheckinCheckout.CHECKIN_CHECKOUT);
    }

    /**
     * Create a detached, initialised CheckinCheckoutRecord
     */
    public CheckinCheckoutRecord(Long checkinCheckoutId, LocalTime checkin, LocalTime checkout, Long timekeepingId) {
        super(CheckinCheckout.CHECKIN_CHECKOUT);

        setCheckinCheckoutId(checkinCheckoutId);
        setCheckin(checkin);
        setCheckout(checkout);
        setTimekeepingId(timekeepingId);
    }

    /**
     * Create a detached, initialised CheckinCheckoutRecord
     */
    public CheckinCheckoutRecord(org.jooq.codegen.maven.example.tables.pojos.CheckinCheckout value) {
        super(CheckinCheckout.CHECKIN_CHECKOUT);

        if (value != null) {
            setCheckinCheckoutId(value.getCheckinCheckoutId());
            setCheckin(value.getCheckin());
            setCheckout(value.getCheckout());
            setTimekeepingId(value.getTimekeepingId());
        }
    }
}
