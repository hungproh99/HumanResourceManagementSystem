/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.LeaveCompanyRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaveCompany extends TableImpl<LeaveCompanyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.leave_company</code>
     */
    public static final LeaveCompany LEAVE_COMPANY = new LeaveCompany();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaveCompanyRecord> getRecordType() {
        return LeaveCompanyRecord.class;
    }

    /**
     * The column <code>human_resource_management.leave_company.id</code>.
     */
    public final TableField<LeaveCompanyRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.leave_company.leave_company_reason_id</code>.
     */
    public final TableField<LeaveCompanyRecord, Long> LEAVE_COMPANY_REASON_ID = createField(DSL.name("leave_company_reason_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>human_resource_management.leave_company.working_contract_id</code>.
     */
    public final TableField<LeaveCompanyRecord, Long> WORKING_CONTRACT_ID = createField(DSL.name("working_contract_id"), SQLDataType.BIGINT, this, "");

    private LeaveCompany(Name alias, Table<LeaveCompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaveCompany(Name alias, Table<LeaveCompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.leave_company</code>
     * table reference
     */
    public LeaveCompany(String alias) {
        this(DSL.name(alias), LEAVE_COMPANY);
    }

    /**
     * Create an aliased <code>human_resource_management.leave_company</code>
     * table reference
     */
    public LeaveCompany(Name alias) {
        this(alias, LEAVE_COMPANY);
    }

    /**
     * Create a <code>human_resource_management.leave_company</code> table
     * reference
     */
    public LeaveCompany() {
        this(DSL.name("leave_company"), null);
    }

    public <O extends Record> LeaveCompany(Table<O> child, ForeignKey<O, LeaveCompanyRecord> key) {
        super(child, key, LEAVE_COMPANY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<LeaveCompanyRecord, Long> getIdentity() {
        return (Identity<LeaveCompanyRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<LeaveCompanyRecord> getPrimaryKey() {
        return Keys.KEY_LEAVE_COMPANY_PRIMARY;
    }

    @Override
    public List<ForeignKey<LeaveCompanyRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK7U2KI7ITXU8X6O44CGS9GPARH, Keys.FK4GYNGEYXJYDSIQVFJFTOWYJ03);
    }

    private transient LeaveCompanyReason _leaveCompanyReason;
    private transient WorkingContract _workingContract;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.leave_company_reason</code> table.
     */
    public LeaveCompanyReason leaveCompanyReason() {
        if (_leaveCompanyReason == null)
            _leaveCompanyReason = new LeaveCompanyReason(this, Keys.FK7U2KI7ITXU8X6O44CGS9GPARH);

        return _leaveCompanyReason;
    }

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.working_contract</code> table.
     */
    public WorkingContract workingContract() {
        if (_workingContract == null)
            _workingContract = new WorkingContract(this, Keys.FK4GYNGEYXJYDSIQVFJFTOWYJ03);

        return _workingContract;
    }

    @Override
    public LeaveCompany as(String alias) {
        return new LeaveCompany(DSL.name(alias), this);
    }

    @Override
    public LeaveCompany as(Name alias) {
        return new LeaveCompany(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaveCompany rename(String name) {
        return new LeaveCompany(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaveCompany rename(Name name) {
        return new LeaveCompany(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
