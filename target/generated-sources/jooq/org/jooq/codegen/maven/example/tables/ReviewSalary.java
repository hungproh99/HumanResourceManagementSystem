/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.HumanResourceManagement;
import org.jooq.codegen.maven.example.Keys;
import org.jooq.codegen.maven.example.tables.records.ReviewSalaryRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewSalary extends TableImpl<ReviewSalaryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>human_resource_management.review_salary</code>
     */
    public static final ReviewSalary REVIEW_SALARY = new ReviewSalary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReviewSalaryRecord> getRecordType() {
        return ReviewSalaryRecord.class;
    }

    /**
     * The column
     * <code>human_resource_management.review_salary.review_id</code>.
     */
    public final TableField<ReviewSalaryRecord, Long> REVIEW_ID = createField(DSL.name("review_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>human_resource_management.review_salary.employee_id</code>.
     */
    public final TableField<ReviewSalaryRecord, String> EMPLOYEE_ID = createField(DSL.name("employee_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>human_resource_management.review_salary.salary_id</code>.
     */
    public final TableField<ReviewSalaryRecord, Long> SALARY_ID = createField(DSL.name("salary_id"), SQLDataType.BIGINT, this, "");

    private ReviewSalary(Name alias, Table<ReviewSalaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReviewSalary(Name alias, Table<ReviewSalaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>human_resource_management.review_salary</code>
     * table reference
     */
    public ReviewSalary(String alias) {
        this(DSL.name(alias), REVIEW_SALARY);
    }

    /**
     * Create an aliased <code>human_resource_management.review_salary</code>
     * table reference
     */
    public ReviewSalary(Name alias) {
        this(alias, REVIEW_SALARY);
    }

    /**
     * Create a <code>human_resource_management.review_salary</code> table
     * reference
     */
    public ReviewSalary() {
        this(DSL.name("review_salary"), null);
    }

    public <O extends Record> ReviewSalary(Table<O> child, ForeignKey<O, ReviewSalaryRecord> key) {
        super(child, key, REVIEW_SALARY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : HumanResourceManagement.HUMAN_RESOURCE_MANAGEMENT;
    }

    @Override
    public Identity<ReviewSalaryRecord, Long> getIdentity() {
        return (Identity<ReviewSalaryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ReviewSalaryRecord> getPrimaryKey() {
        return Keys.KEY_REVIEW_SALARY_PRIMARY;
    }

    @Override
    public List<ForeignKey<ReviewSalaryRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FKTEDYOHKMCUADRVNTUH8GUUY25);
    }

    private transient SalaryMonthly _salaryMonthly;

    /**
     * Get the implicit join path to the
     * <code>human_resource_management.salary_monthly</code> table.
     */
    public SalaryMonthly salaryMonthly() {
        if (_salaryMonthly == null)
            _salaryMonthly = new SalaryMonthly(this, Keys.FKTEDYOHKMCUADRVNTUH8GUUY25);

        return _salaryMonthly;
    }

    @Override
    public ReviewSalary as(String alias) {
        return new ReviewSalary(DSL.name(alias), this);
    }

    @Override
    public ReviewSalary as(Name alias) {
        return new ReviewSalary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewSalary rename(String name) {
        return new ReviewSalary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewSalary rename(Name name) {
        return new ReviewSalary(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
